<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- API level: 21, version: 5.0.2 R1, code name: Lollipop, all permission mappings -->
<permissions>
  <permission name="android.permission.WRITE_CONTACTS">
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>createPersonInMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.content.ContentValues</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$ContactMethods</class>
      <method>addPostalLocation</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>long</parameter>
        <parameter>double</parameter>
        <parameter>double</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$ProfileSyncState</class>
      <method>newSetOperation</method>
      <returnType>ContentProviderOperation</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Directory</class>
      <method>notifyDirectoryChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts$AggregationSuggestions$Builder</class>
      <method>build</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>markAsContacted</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>markAsContacted</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CallLog$Calls</class>
      <method>updateNormalizedNumber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CallLog$Calls</class>
      <method>addCall</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.CallerInfo</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.telecom.PhoneAccountHandle</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CallLog$Calls</class>
      <method>addCall</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.CallerInfo</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.telecom.PhoneAccountHandle</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$Settings</class>
      <method>setSetting</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$PinnedPositions</class>
      <method>pin</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$SyncState</class>
      <method>newSetOperation</method>
      <returnType>ContentProviderOperation</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CallLog$Calls</class>
      <method>updateDataUsageStatForData</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Data</class>
      <method>getContactLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$RawContacts</class>
      <method>getContactLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge$QueryHandler</class>
      <method>onQueryComplete</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>android.database.Cursor</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.contacts</package>
      <class>ContactsListActivity</class>
      <method>getContactUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.contacts</package>
      <class>ContactsListActivity</class>
      <method>getUriToQuery</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.contacts</package>
      <class>ContactsListActivity</class>
      <method>getSelectedUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS">
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>updateVisitedHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>addSearchUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>truncateHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>BrowserContract$SyncState</class>
      <method>newSetOperation</method>
      <returnType>ContentProviderOperation</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>BrowserContract$Bookmarks</class>
      <method>buildFolderUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteHistoryWhere</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteHistoryTimeFrame</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteFromHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearSearches</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>BrowserContract$Settings</class>
      <method>setSyncEnabled</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_CALL_LOG">
    <call>
      <package>android.provider</package>
      <class>CallLog$Calls</class>
      <method>getLastOutgoingCall</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.WRITE_CALENDAR">
    <call>
      <package>android.provider</package>
      <class>CalendarContract$CalendarAlerts</class>
      <method>insert</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.calendar</package>
      <class>AgendaWindowAdapter</class>
      <method>buildQueryUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.INTERNET">
    <call>
      <package>android.app</package>
      <class>DownloadManager</class>
      <method>enqueue</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>android.app.DownloadManager$Request</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>DownloadManager</class>
      <method>addCompletedDownload</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>DownloadManager</class>
      <method>addCompletedDownload</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Downloads</class>
      <method>removeAllDownloadsByPackage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>BootReceiver</class>
      <method>removeOldUpdatePackages</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>BootReceiver</class>
      <method>access$100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.BootReceiver</parameter>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>BootReceiver$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>BootReceiver</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>DownloadManager</class>
      <method>getUriForDownloadedFile</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>DatagramSocket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>HttpURLConnection</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>HttpURLConnection</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.squareup.okhttp.internal.http</package>
      <class>DelegatingHttpsURLConnection</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.squareup.okhttp.internal.http</package>
      <class>HttpsURLConnectionImpl</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.squareup.okhttp.internal.http</package>
      <class>JavaApiConverter$CacheHttpsURLConnection</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>java.net</package>
      <class>MulticastSocket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>NetworkInterface</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>ServerSocket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>ServerSocket</class>
      <method>bind</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.net.SocketAddress</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.test</package>
      <class>ModelInterpreter</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.net.InetSocketAddress</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>Socket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>URL</class>
      <method>getContent</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>java.net</package>
      <class>URL</class>
      <method>openConnection</method>
      <returnType>URLConnection</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaHTTPConnection</class>
      <method>seekTo</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaHTTPConnection</class>
      <method>readAt</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>byte[]</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaHTTPConnection</class>
      <method>getMIMEType</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaHTTPConnection</class>
      <method>getSize</method>
      <returnType>long</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>IMediaHTTPConnection$Stub$Proxy</class>
      <method>getMIMEType</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>IMediaHTTPConnection$Stub</class>
      <method>getMIMEType</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>IMediaHTTPConnection$Stub$Proxy</class>
      <method>getSize</method>
      <returnType>long</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>IMediaHTTPConnection$Stub</class>
      <method>getSize</method>
      <returnType>long</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>IMediaHTTPConnection</class>
      <method>getMIMEType</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>IMediaHTTPConnection$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>IMediaHTTPConnection</class>
      <method>getSize</method>
      <returnType>long</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaHTTPConnection</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>URL</class>
      <method>openStream</method>
      <returnType>InputStream</returnType>
      <parameters/>
    </call>
    <call>
      <package>java.net</package>
      <class>URLConnection</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>java.net</package>
      <class>URLConnection</class>
      <method>getInputStream</method>
      <returnType>InputStream</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.connectivity</package>
      <class>PacManager</class>
      <method>get</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.squareup.okhttp.internal.http</package>
      <class>JavaApiConverter</class>
      <method>createOkResponse</method>
      <returnType>Response</returnType>
      <parameters>
        <parameter>java.net.URI</parameter>
        <parameter>java.net.URLConnection</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.connectivity</package>
      <class>PacManager</class>
      <method>access$200</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.squareup.okhttp</package>
      <class>HttpResponseCache</class>
      <method>put</method>
      <returnType>CacheRequest</returnType>
      <parameters>
        <parameter>java.net.URI</parameter>
        <parameter>java.net.URLConnection</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.connectivity</package>
      <class>PacManager$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>org.apache.http.impl.client</package>
      <class>DefaultHttpClient</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>org.apache.http.impl.client</package>
      <class>DefaultHttpClient</class>
      <method>execute</method>
      <returnType>HttpResponse</returnType>
      <parameters>
        <parameter>org.apache.http.client.methods.HttpUriRequest</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_CONTACTS">
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>onClick</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.View</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>assignContactFromPhone</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>assignContactFromPhone</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts$AggregationSuggestions$Builder</class>
      <method>build</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>CallLog$Calls</class>
      <method>addCall</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.CallerInfo</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.telecom.PhoneAccountHandle</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CallLog$Calls</class>
      <method>addCall</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.CallerInfo</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.telecom.PhoneAccountHandle</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Data</class>
      <method>getContactLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$RawContacts</class>
      <method>getContactLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge$QueryHandler</class>
      <method>onQueryComplete</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>android.database.Cursor</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>CallerInfo</class>
      <method>doSecondaryLookupIfNecessary</method>
      <returnType>CallerInfo</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.CallerInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>CallerInfoAsyncQuery$CallerInfoAsyncQueryHandler</class>
      <method>onQueryComplete</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>android.database.Cursor</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>CallerInfo</class>
      <method>getCallerInfo</method>
      <returnType>CallerInfo</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>CallerInfo</class>
      <method>getCallerInfo</method>
      <returnType>CallerInfo</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ValidateNotificationPeople</class>
      <method>resolveEmailContact</method>
      <returnType>ValidateNotificationPeople$LookupResult</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ValidateNotificationPeople</class>
      <method>access$600</method>
      <returnType>ValidateNotificationPeople$LookupResult</returnType>
      <parameters>
        <parameter>com.android.server.notification.ValidateNotificationPeople</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ValidateNotificationPeople$PeopleRankingReconsideration</class>
      <method>work</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>RankingReconsideration</class>
      <method>work</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ValidateNotificationPeople$2</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>RankingReconsideration</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationIntrusivenessExtractor$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationManagerService</class>
      <method>handleRankingReconsideration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ValidateNotificationPeople$PeopleRankingReconsideration</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationManagerService</class>
      <method>access$4000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.notification.NotificationManagerService</parameter>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ValidateNotificationPeople</class>
      <method>resolvePhoneContact</method>
      <returnType>ValidateNotificationPeople$LookupResult</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ValidateNotificationPeople</class>
      <method>access$500</method>
      <returnType>ValidateNotificationPeople$LookupResult</returnType>
      <parameters>
        <parameter>com.android.server.notification.ValidateNotificationPeople</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>queryGroups</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>assignContactFromEmail</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>assignContactFromEmail</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$Settings</class>
      <method>getSetting</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>tryGetMyContactsGroupId</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>createPersonInMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.content.ContentValues</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>CallerInfoAsyncQuery</class>
      <method>startQuery</method>
      <returnType>CallerInfoAsyncQuery</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>CallerInfoAsyncQuery</class>
      <method>startQuery</method>
      <returnType>CallerInfoAsyncQuery</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.CallerInfoAsyncQuery$OnQueryCompleteListener</parameter>
        <parameter>java.lang.Object</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.contacts</package>
      <class>ContactsListActivity</class>
      <method>getContactUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.contacts</package>
      <class>ContactsListActivity</class>
      <method>getUriToQuery</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.contacts</package>
      <class>ContactsListActivity</class>
      <method>getSelectedUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.WRITE_USER_DICTIONARY">
    <call>
      <package>android.provider</package>
      <class>UserDictionary$Words</class>
      <method>addWord</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.Locale</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>UserDictionary$Words</class>
      <method>addWord</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.WRITE_SETTINGS">
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>getUriFor</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioService$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.AudioService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.preference</package>
      <class>SeekBarVolumizer</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>int</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>android.preference.SeekBarVolumizer$Callback</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>DateTimeView</class>
      <method>registerReceivers</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.settings</package>
      <class>SettingsCmd</class>
      <method>deleteForUser</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.content.IContentProvider</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$SettingsObserver</class>
      <method>observe</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.view</package>
      <class>RotationPolicy</class>
      <method>registerRotationPolicyListener</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.view.RotationPolicy$RotationPolicyListener</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>CoreSettingsObserver</class>
      <method>beginObserveCoreSettings</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.input</package>
      <class>InputManagerService</class>
      <method>registerPointerSpeedSettingObserver</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.input</package>
      <class>InputManagerService</class>
      <method>registerShowTouchesSettingObserver</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationManagerService$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.notification.NotificationManagerService</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>systemReady</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.app.IAppOpsService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>VibratorService</class>
      <method>systemReady</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>android.preference</package>
      <class>VolumePreference</class>
      <method>onBindDialogView</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.View</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>DateTimeView</class>
      <method>onAttachedToWindow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.settings</package>
      <class>SettingsCmd</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>init</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.view.IWindowManager</parameter>
        <parameter>android.view.WindowManagerPolicy$WindowManagerFuncs</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view</package>
      <class>RotationPolicy</class>
      <method>registerRotationPolicyListener</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.view.RotationPolicy$RotationPolicyListener</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>CoreSettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.input</package>
      <class>InputManagerService</class>
      <method>start</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationManagerService</class>
      <method>onStart</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServer</class>
      <method>startOtherServices</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.settings</package>
      <class>SettingsCmd</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>init</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.view.IWindowManager</parameter>
        <parameter>android.view.WindowManagerPolicy$WindowManagerFuncs</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>installSystemProviders</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemService</class>
      <method>onStart</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServer</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$3</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServiceManager</class>
      <method>startService</method>
      <returnType>SystemService</returnType>
      <parameters>
        <parameter>java.lang.Class</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServer</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServer</class>
      <method>startBootstrapServices</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServer</class>
      <method>startCoreServices</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServiceManager</class>
      <method>startService</method>
      <returnType>SystemService</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Bookmarks</class>
      <method>add</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>char</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Global</class>
      <method>getUriFor</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.view.WindowManagerPolicy$WindowManagerFuncs</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.cdma.CDMAPhone</parameter>
        <parameter>android.telephony.CellInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.dataconnection</package>
      <class>DcTrackerBase$DataRoamingSettingObserver</class>
      <method>register</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmServiceStateTracker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.gsm.GSMPhone</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SMSDispatcher</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
        <parameter>com.android.internal.telephony.SmsUsageMonitor</parameter>
        <parameter>com.android.internal.telephony.ImsSMSDispatcher</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsUsageMonitor$SettingsObserverHandler</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.util.concurrent.atomic.AtomicBoolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>BatteryService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>ConnectivityService$SettingsObserver</class>
      <method>observe</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>OverlayDisplayAdapter$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>WifiDisplayController</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>com.android.server.display.WifiDisplayController$Listener</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiControlService</class>
      <method>registerContentObserver</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NetworkTimeUpdateService$SettingsObserver</class>
      <method>observe</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ZenModeHelper$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.notification.ZenModeHelper</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NsdService$NsdStateMachine</class>
      <method>registerForNsdSetting</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SamplingProfilerService</class>
      <method>registerSettingObserver</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbDeviceManager$UsbHandler</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.usb.UsbDeviceManager</parameter>
        <parameter>android.os.Looper</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController</class>
      <method>registerForStayAwakeModeChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController</class>
      <method>registerForWifiIdleTimeChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController</class>
      <method>registerForWifiSleepPolicyChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiNotificationController$NotificationEnabledSettingObserver</class>
      <method>register</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiServiceImpl</class>
      <method>registerForScanModeChange</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiStateMachine</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.server.wifi.WifiTrafficPoller</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiWatchdogStateMachine</class>
      <method>registerForSettingsChanges</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiWatchdogStateMachine</class>
      <method>registerForWatchdogToggle</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>showGlobalActionsInternal</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.cdma.CDMALTEPhone</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.cdma.CDMAPhone</parameter>
        <parameter>android.telephony.CellInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.cdma.CDMAPhone</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.dataconnection</package>
      <class>DcTrackerBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaSMSDispatcher</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
        <parameter>com.android.internal.telephony.SmsUsageMonitor</parameter>
        <parameter>com.android.internal.telephony.ImsSMSDispatcher</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmSMSDispatcher</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
        <parameter>com.android.internal.telephony.SmsUsageMonitor</parameter>
        <parameter>com.android.internal.telephony.ImsSMSDispatcher</parameter>
        <parameter>com.android.internal.telephony.gsm.GsmInboundSmsHandler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmSMSDispatcher</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
        <parameter>com.android.internal.telephony.SmsUsageMonitor</parameter>
        <parameter>com.android.internal.telephony.ImsSMSDispatcher</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ImsSMSDispatcher</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
        <parameter>com.android.internal.telephony.SmsStorageMonitor</parameter>
        <parameter>com.android.internal.telephony.SmsUsageMonitor</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ImsSMSDispatcher</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
        <parameter>com.android.internal.telephony.SmsUsageMonitor</parameter>
        <parameter>com.android.internal.telephony.ImsSMSDispatcher</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsUsageMonitor</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$Lifecycle</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>WifiDisplayAdapter$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiControlService</class>
      <method>onInitializeCecComplete</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NetworkTimeUpdateService</class>
      <method>systemRunning</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ZenModeHelper</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NsdService$NsdStateMachine</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.NsdService</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SamplingProfilerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbDeviceManager</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController</class>
      <method>initializeAndRegisterForSettingsChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Looper</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiNotificationController</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.server.wifi.WifiStateMachine</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiServiceImpl</class>
      <method>checkAndStartWifi</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiServiceImpl</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiWatchdogStateMachine</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Messenger</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$4</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>initSstIcc</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.cdma.CDMAPhone</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>initSstIcc</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.dataconnection</package>
      <class>DcTracker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IccSmsInterfaceManager</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>AlarmManagerService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$Lifecycle</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.fingerprint</package>
      <class>FingerprintService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiControlService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.lights</package>
      <class>LightsService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.media</package>
      <class>MediaSessionService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.media.projection</package>
      <class>MediaProjectionManagerService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>PersistentDataBlockService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>Installer</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.print</package>
      <class>PrintManagerService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.restrictions</package>
      <class>RestrictionsManagerService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.storage</package>
      <class>DeviceStorageMonitorService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServiceManager</class>
      <method>startBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.twilight</package>
      <class>TwilightService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usage</package>
      <class>UsageStatsService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.webkit</package>
      <class>WebViewUpdateService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiControlService</class>
      <method>access$1200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.hdmi.HdmiControlService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>SystemServer$2</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NsdService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.server.wifi.WifiServiceImpl</parameter>
        <parameter>android.os.Looper</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiWatchdogStateMachine</class>
      <method>makeWifiWatchdogStateMachine</method>
      <returnType>WifiWatchdogStateMachine</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Messenger</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>init</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>getGsmPhone</method>
      <returnType>Phone</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>makeDefaultPhone</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneProxy</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>AlarmManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$Lifecycle</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.appwidget</package>
      <class>AppWidgetService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>BatteryService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.devicepolicy</package>
      <class>DevicePolicyManagerService$Lifecycle</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.dreams</package>
      <class>DreamManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.ethernet</package>
      <class>EthernetService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.fingerprint</package>
      <class>FingerprintService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiControlService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.job</package>
      <class>JobSchedulerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.lights</package>
      <class>LightsService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.media</package>
      <class>MediaSessionService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.media.projection</package>
      <class>MediaProjectionManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>PersistentDataBlockService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>Installer</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.print</package>
      <class>PrintManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.restrictions</package>
      <class>RestrictionsManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.storage</package>
      <class>DeviceStorageMonitorService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.trust</package>
      <class>TrustManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.tv</package>
      <class>TvInputManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.twilight</package>
      <class>TwilightService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usage</package>
      <class>UsageStatsService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbService$Lifecycle</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.webkit</package>
      <class>WebViewUpdateService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi.p2p</package>
      <class>WifiP2pService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>RttService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiScanningService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>finishBooting</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiControlService$1</class>
      <method>onAllocated</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NsdService</class>
      <method>create</method>
      <returnType>NsdService</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbService$Lifecycle</class>
      <method>onStart</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>getCdmaPhone</method>
      <returnType>Phone</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>getGsmPhone</method>
      <returnType>Phone</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneProxy</class>
      <method>deleteAndCreatePhone</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>makeDefaultPhones</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>bootAnimationComplete</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>ensureBootCompleted</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiCecController$AllocateAddressCallback</class>
      <method>onAllocated</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>getCdmaPhone</method>
      <returnType>Phone</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneProxy</class>
      <method>phoneObjectUpdater</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>com.android.internal.telephony.Phone</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.CommandsInterface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>android.net.sip.SipProfile</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>bootAnimationComplete</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>appNotResponding</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>systemReady</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.Runnable</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>crashApplication</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.hdmi</package>
      <class>HdmiCecController$4</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneProxy</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneFactory</class>
      <method>makePhone</method>
      <returnType>ImsPhone</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>com.android.internal.telephony.Phone</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneFactory</class>
      <method>makePhone</method>
      <returnType>SipPhone</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>bootAnimationComplete</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>serviceTimeout</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$11</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue$AppNotResponding</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$15</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>handleApplicationWtf</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>handleApplicationCrashInner</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>Phone</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>makeImsPhone</method>
      <returnType>ImsPhone</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
        <parameter>com.android.internal.telephony.Phone</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>makeSipPhone</method>
      <returnType>SipPhone</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>performEnableScreen</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>handleApplicationWtf</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>handleApplicationCrash</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>NativeCrashListener$NativeCrashReporter</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>enableScreenAfterBoot</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>performBootTimeout</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>showBootMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>enableScreenIfNeededLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>checkBootAnimationCompleteLocked</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>handleApplicationWtf</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>handleApplicationCrash</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>NativeCrashListener</class>
      <method>consumeNativeCrashData</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.FileDescriptor</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ServiceStateTracker</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>updateImsPhone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>enableScreenAfterBoot</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>showBootMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>enableScreenIfNeeded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>performLayoutAndPlaceSurfacesLockedInner</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>performShowLocked</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>stepAnimationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowState</class>
      <method>hideLw</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>access$1100</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.os</package>
      <class>RuntimeInit</class>
      <method>wtf</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Throwable</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>handleApplicationCrash</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>android.app.ApplicationErrorReport$CrashInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>NativeCrashListener</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>pollStateDone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmServiceStateTracker</class>
      <method>updatePhoneObject</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmServiceStateTracker</class>
      <method>queueNextSignalStrengthPoll</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>handleCdmaSubscriptionSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>queueNextSignalStrengthPoll</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>showBootMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>enableScreenIfNeeded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>enableScreenIfNeeded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>performLayoutAndPlaceSurfacesLockedLoop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AppWindowAnimator</class>
      <method>showAllWindowsLocked</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>updateWindowsLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>commitFinishDrawingLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowState</class>
      <method>hideLw</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowState</class>
      <method>setAppOpVisibilityLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.util</package>
      <class>Log$1</class>
      <method>onTerribleFailure</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.util.Log$TerribleFailure</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.os</package>
      <class>RuntimeInit$UncaughtHandler</class>
      <method>uncaughtException</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.Thread</parameter>
        <parameter>java.lang.Throwable</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>startObservingNativeCrashes</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>pollState</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>pollStateDone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmServiceStateTracker</class>
      <method>pollStateDone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>handleCdmaSubscriptionSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>queueNextSignalStrengthPoll</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>showBootMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>enableScreenIfNeeded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>performLayoutAndPlaceSurfacesLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>testTokenMayBeDrawnLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>handleAppTransitionReadyLocked</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowList</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>animateLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy$WindowState</class>
      <method>hideLw</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DisplayContent</class>
      <method>switchUserStacks</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>updateAppOpsState</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>pollState</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ServiceStateTracker</class>
      <method>pollState</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>handlePollStateResult</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmServiceStateTracker</class>
      <method>handlePollStateResult</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmServiceStateTracker</class>
      <method>pollState</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>performBootDexOpt</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>performBootDexOpt</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>finishScreenTurningOn</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>computeNewConfiguration</method>
      <returnType>Configuration</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setTokenVisibilityLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.wm.AppWindowToken</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>access$400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>addTask</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>moveStackWindowsLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>reconfigureDisplayLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>reevaluateStatusBarVisibility</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>removeWindowInnerLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.Session</parameter>
        <parameter>com.android.server.wm.WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>resizeStack</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setCurrentUser</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setNewConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setUniverseTransformLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowState</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>unsetAppFreezingScreenLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.AppWindowToken</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowAnimator</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>BarController</class>
      <method>setBarShowingLw</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>finishPostLayoutPolicyLw</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>applyPostLayoutPolicyLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$5</class>
      <method>onOpChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>getSubscriptionInfoAndStartPollingThreads</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>handlePollStateResult</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ServiceStateTracker</class>
      <method>handlePollStateResult</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content.pm</package>
      <class>IPackageManager$Stub$Proxy</class>
      <method>performBootDexOpt</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content.pm</package>
      <class>IPackageManager$Stub</class>
      <method>performBootDexOpt</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>finishKeyguardDrawn</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>finishWindowsDrawn</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>updateConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>prepareAppTransition</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>updateRotationUncheckedLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>makeWindowFreezingScreenIfNeededLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>requestTraversalLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>moveTaskToStack</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setForcedDisplayDensityLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setForcedDisplaySizeLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setOverscanLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy$WindowManagerFuncs</class>
      <method>reevaluateStatusBarVisibility</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>TaskStack</class>
      <method>detachDisplay</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>setNewConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>setNewConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>updateConfigurationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>startAppFreezingScreenLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.AppWindowToken</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>BarController</class>
      <method>checkHiddenLw</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>BarController</class>
      <method>adjustSystemUiVisibilityLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>beginLayoutLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>finishPostLayoutPolicyLw</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>applyPostLayoutPolicyLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>getSubscriptionInfoAndStartPollingThreads</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content.pm</package>
      <class>IPackageManager$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content.pm</package>
      <class>IPackageManager</class>
      <method>performBootDexOpt</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>access$300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.PhoneWindowManager</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>wakingUp</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>access$400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.PhoneWindowManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>updateConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>prepareAppTransition</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>prepareAppTransition</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>moveTaskToBackLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>moveTaskToFrontLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>updateTransitLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>resumeRotationLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>stopFreezingDisplayLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>updateResizingWindows</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>createSurfaceLocked</method>
      <returnType>SurfaceControl</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$LocalService</class>
      <method>waitForAllWindowsDrawn</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.Runnable</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>handleDisplayAdded</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>handleDisplayChangedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>handleDisplayRemovedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>keyguardGoingAway</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>requestTraversal</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setAppFullscreen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$9</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$HideNavInputEventReceiver</class>
      <method>onInputEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.InputEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>clearClearableFlagsLw</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>detachStackLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
        <parameter>com.android.server.wm.TaskStack</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>setNewConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>retrieveSettings</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>updateOrientationFromAppTokensLocked</method>
      <returnType>Configuration</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
        <parameter>android.os.IBinder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>adjustSystemUiVisibilityLw</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>beginLayoutLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>Phone</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>wakingUp</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>systemBooted</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>updateConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>prepareAppTransition</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>findTaskToMoveToFrontLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DragState</class>
      <method>unregister</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>access$500</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerInternal</class>
      <method>waitForAllWindowsDrawn</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.Runnable</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$VirtualActivityDisplay</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityStackSupervisor</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>onDisplayAdded</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>access$1000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>access$900</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>keyguardGoingAway</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>keyguardGoingAway</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$LocalService</class>
      <method>requestTraversalFromDisplayManager</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>updateSystemBarsLw</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DisplayContent</class>
      <method>checkForDeferredActions</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>detachStack</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>adjustSystemUiVisibilityLw</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>performLayoutLockedInner</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneProxy</class>
      <method>setOperatorBrandOverride</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>Notifier$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>systemBooted</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>LocalePicker</class>
      <method>updateLocale</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.util.Locale</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>MccTable</class>
      <method>setSystemLocale</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>MccTable</class>
      <method>updateMccMncConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MountService</class>
      <method>copyLocaleFromMountService</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>sendConfigurationLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>displayReady</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>sendNewConfiguration</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>setLockTaskModeLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DragState</class>
      <method>endDragLw</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>Session</class>
      <method>performDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>android.os.IBinder</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>android.content.ClipData</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>prepareDragSurface</method>
      <returnType>IBinder</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>android.view.SurfaceSession</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.Surface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>startFreezingScreen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>screenTurningOn</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$ScreenOnListener</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$VirtualActivityContainer</class>
      <method>setSurfaceLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.Surface</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>handleDisplayAddedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>onDisplayChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>onDisplayRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>keyguardGoingAway</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerInternal</class>
      <method>requestTraversalFromDisplayManager</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>updateSystemUiVisibilityLw</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$ActivityContainer</class>
      <method>detachLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>statusBarVisibilityChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>updateFocusedWindowLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneBase</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>RuimRecords</class>
      <method>setLocaleFromCsim</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>SIMRecords</class>
      <method>setLocaleFromUsim</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>setProperties</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>updateCurrentCarrierInProvider</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>PhoneFactory</class>
      <method>setDefaultSubscription</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ServiceStateTracker</class>
      <method>updateCarrierMccMncConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SubscriptionController</class>
      <method>setDefaultSubId</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>IccCardProxy</class>
      <method>updateQuietMode</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MountService</class>
      <method>access$2000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.MountService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>sendConfigurationAndStartDreamOrDockAppLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$DragInputEventReceiver</class>
      <method>onInputEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.InputEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub$Proxy</class>
      <method>performDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>android.os.IBinder</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>android.content.ClipData</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub</class>
      <method>performDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>android.os.IBinder</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>android.content.ClipData</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>Session</class>
      <method>prepareDrag</method>
      <returnType>IBinder</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.Surface</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>startFreezingScreen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>startFreezingScreen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>screenTurningOn</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$ScreenOnListener</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>onDisplayAdded</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>handleDisplayChangedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>handleDisplayRemovedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>scheduleTraversalLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>access$1300</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.PhoneWindowManager</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>focusChangedLw</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>requestTransientBars</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$VirtualActivityContainer</class>
      <method>detachLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>statusBarVisibilityChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>statusBarVisibilityChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMAPhone</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GSMPhone</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhoneBase</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.imsphone</package>
      <class>ImsPhone</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhoneBase</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.sip</package>
      <class>SipPhone</class>
      <method>setPropertiesByCarrier</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>RuimRecords</class>
      <method>onAllRecordsLoaded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>SIMRecords</class>
      <method>onAllRecordsLoaded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>init</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.internal.telephony.PhoneNotifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>onSubscriptionActivated</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CDMALTEPhone</class>
      <method>updateCurrentCarrierInProvider</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaLteServiceStateTracker</class>
      <method>updateCarrierMccMncConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaServiceStateTracker</class>
      <method>updateCarrierMccMncConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmServiceStateTracker</class>
      <method>updateCarrierMccMncConfiguration</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SubscriptionController</class>
      <method>addSubInfoRecord</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>IccCardProxy</class>
      <method>setVoiceRadioTech</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MountService$3</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>updateAfterBroadcastLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>updateLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession</class>
      <method>performDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>android.os.IBinder</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>android.content.ClipData</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub$Proxy</class>
      <method>prepareDrag</method>
      <returnType>IBinder</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.Surface</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub</class>
      <method>prepareDrag</method>
      <returnType>IBinder</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.Surface</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>startFreezingScreen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>setScreenState</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>onDisplayChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>onDisplayRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$1600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>handleDisplayDeviceAddedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>handleDisplayDeviceChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>handleDisplayDeviceRemovedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>requestGlobalDisplayStateInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>setDisplayInfoOverrideFromWindowManagerInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.view.DisplayInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>setDisplayPropertiesInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>float</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>windowManagerAndInputReady</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$17</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy</class>
      <method>focusChangedLw</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>access$1100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.PhoneWindowManager</parameter>
        <parameter>android.view.WindowManagerPolicy$WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$VirtualActivityContainer</class>
      <method>onTaskListEmptyLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>statusBarVisibilityChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>IccRecords</class>
      <method>onAllRecordsLoaded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>RuimRecords</class>
      <method>onRecordLoaded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>SIMRecords</class>
      <method>onRecordLoaded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISub$Stub$Proxy</class>
      <method>addSubInfoRecord</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISub$Stub</class>
      <method>addSubInfoRecord</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MountService</class>
      <method>onDaemonConnected</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.UiModeManagerService</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService$3</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>updateDockState</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>updateTwilight</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>View</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>Session</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession</class>
      <method>prepareDrag</method>
      <returnType>IBinder</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.Surface</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>animateScreenStateChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService$DisplayAdapterListener</class>
      <method>onTraversalRequested</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>createVirtualDisplayInternal</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.hardware.display.IVirtualDisplayCallback</parameter>
        <parameter>android.media.projection.IMediaProjection</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.Surface</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>handleDisplayDeviceAdded</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$1400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>handleDisplayDeviceRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>releaseVirtualDisplayInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$3700</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$4100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>int</parameter>
        <parameter>android.view.DisplayInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$4300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>float</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$18</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$7</class>
      <method>onSwipeFromBottom</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$7</class>
      <method>onSwipeFromRight</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager$7</class>
      <method>onSwipeFromTop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$ActivityContainer</class>
      <method>onTaskListEmptyLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony.uicc</package>
      <class>IccRecords</class>
      <method>onRecordLoaded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISub</class>
      <method>addSubInfoRecord</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISub$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>INativeDaemonConnectorCallbacks</class>
      <method>onDaemonConnected</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService</class>
      <method>access$100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.UiModeManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService$4</class>
      <method>onTwilightStateChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>FragmentBreadCrumbs</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>MediaRouteButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>NativeActivity$NativeContentView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>SearchDialog$SearchBar</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.appwidget</package>
      <class>AppWidgetHostView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>FilterSurfaceView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.gesture</package>
      <class>GestureOverlayView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>ExtractButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>ExtractEditLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>ExtractEditText</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget$CCLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget$CCLineBox</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>TtmlRenderingWidget</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.tv</package>
      <class>TvView$3</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.tv</package>
      <class>TvView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget$CueLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget$RegionLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget$SpanLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.opengl</package>
      <class>GLSurfaceView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.preference</package>
      <class>PreferenceFrameLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.renderscript</package>
      <class>RSSurfaceView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.renderscript</package>
      <class>RSTextureView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>GhostView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>LayoutInflater$BlinkLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>SurfaceView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>TextureView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>ViewGroup</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>ViewOverlay$OverlayViewGroup</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>ViewStub</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AbsListView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AbsoluteLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AbsSeekBar</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AbsSpinner</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActionMenuPresenter$OverflowMenuButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActionMenuView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActivityChooserView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AdapterViewAnimator</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AdapterView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AdapterViewFlipper</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AnalogClock</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AppSecurityPermissions$PermissionItemView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AutoCompleteTextView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Button</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>CalendarView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>CalendarView$LegacyCalendarViewDelegate$WeekView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>CheckBox</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>CheckedTextView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Chronometer</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>CompoundButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>DatePicker</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>DateTimeView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>DayPickerView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>DialerFilter</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>DigitalClock</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Editor$HandleView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Editor$InsertionHandleView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Editor$SelectionEndHandleView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Editor$SelectionStartHandleView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>EditText</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ExpandableListView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>FrameLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Gallery</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>GridLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>GridView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>HorizontalScrollView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ImageButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ImageSwitcher</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ImageView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>LinearLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ListPopupWindow$DropDownListView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ListView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>MediaController</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>MultiAutoCompleteTextView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>NumberPicker</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>NumberPicker$CustomEditText</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>PopupWindow$PopupViewContainer</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ProgressBar</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>RadialTimePickerView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>RadioButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>RadioGroup</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>RatingBar</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>RelativeLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>RemoteViewsAdapter$RemoteViewsFrameLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ScrollView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>SearchView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>SearchView$SearchAutoComplete</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>SeekBar</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>SimpleMonthView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>SlidingDrawer</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Space</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Spinner</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>StackView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>StackView$StackFrame</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Switch</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TabHost</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TableLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TableRow</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TabWidget</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TextClock</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TextSwitcher</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TextView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TextViewWithCircularIndicator</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TimePicker</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ToggleButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Toolbar</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>TwoLineListItem</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ViewAnimator</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ViewFlipper</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ViewSwitcher</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>YearPickerView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ZoomButton</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ZoomButtonsController$Container</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ZoomControls</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>AlertController$RecycleListView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>PlatLogoActivity$1</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>ImmersiveModeConfirmation$ClingWindowView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow$DecorView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>RecentApplicationsBackground</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>ActionMenuItemView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>ExpandedMenuView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>IconMenuItemView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>IconMenuView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>ListMenuItemView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>AbsActionBarView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>AccessibleDateAnimator</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ActionBarContainer</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ActionBarContextView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ActionBarOverlayLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ActionBarView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ActionBarView$HomeView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>DialogTitle</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>FaceUnlockView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>LinearLayoutWithDefaultTouchRecepient</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>LockPatternView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget.multiwaveview</package>
      <class>GlowPadView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PointerLocationView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PreferenceImageView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ResolverDrawerLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>RotarySelector</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ScrollingTabContainerView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>ScrollingTabContainerView$TabView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>SizeAdaptiveLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>SlidingTab</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>SubtitleView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>SwipeDismissLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>TextProgressBar</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>WaveView</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>WeightedLinearLayout</class>
      <method>startDrag</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ClipData</parameter>
        <parameter>android.view.View$DragShadowBuilder</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>updatePowerState</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayAdapter$Listener</class>
      <method>onTraversalRequested</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$3200</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>android.hardware.display.IVirtualDisplayCallback</parameter>
        <parameter>android.media.projection.IMediaProjection</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.Surface</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$1300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService$DisplayAdapterListener</class>
      <method>onDisplayDeviceEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayDevice</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$1500</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>com.android.server.display.DisplayDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService</class>
      <method>access$3500</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayManagerService</parameter>
        <parameter>android.os.IBinder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService$LocalService$1</class>
      <method>requestDisplayState</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService$LocalService</class>
      <method>setDisplayInfoOverrideFromWindowManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.view.DisplayInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService$LocalService</class>
      <method>setDisplayProperties</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>float</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>SystemGesturesPointerEventListener$Callbacks</class>
      <method>onSwipeFromBottom</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>SystemGesturesPointerEventListener$Callbacks</class>
      <method>onSwipeFromRight</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>SystemGesturesPointerEventListener$Callbacks</class>
      <method>onSwipeFromTop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>finishAllActivitiesLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>removeTask</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$ActivityContainer</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SubscriptionManager</class>
      <method>addSubInfoRecord</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SubscriptionController</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NativeDaemonConnector</class>
      <method>listenToSocket</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>UiModeManagerService$2</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.twilight</package>
      <class>TwilightListener</class>
      <method>onTwilightStateChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>Editor</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>access$400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayPowerController</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>debounceProximitySensor</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayAdapter$2</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayAdapter$Listener</class>
      <method>onDisplayDeviceEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayDevice</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayBlanker</class>
      <method>requestDisplayState</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.hardware.display</package>
      <class>DisplayManagerInternal</class>
      <method>setDisplayInfoOverrideFromWindowManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.view.DisplayInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>android.hardware.display</package>
      <class>DisplayManagerInternal</class>
      <method>setDisplayProperties</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>float</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>SystemGesturesPointerEventListener</class>
      <method>onPointerEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityRecord</class>
      <method>setTask</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>com.android.server.am.TaskRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityContainer$Stub$Proxy</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityContainer$Stub</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$VirtualActivityContainer</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SubInfoRecordUpdater</class>
      <method>updateSimInfoByIccId</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>NativeDaemonConnector</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.twilight</package>
      <class>TwilightService$TwilightListenerRecord</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>TextView</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>sendUpdatePowerStateLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController$ScreenOnUnblocker</class>
      <method>onScreenOn</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>access$500</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayPowerController</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>handleProximitySensorEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayAdapter$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerState$PhotonicModulator</class>
      <method>requestDisplayState</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>computeScreenConfigurationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>newDisplayContentLocked</method>
      <returnType>DisplayContent</returnType>
      <parameters>
        <parameter>android.view.Display</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>resetTargetTaskIfNeededLocked</method>
      <returnType>ActivityOptions</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>resetAffinityTaskIfNeededLocked</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityContainer$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityContainer</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SubInfoRecordUpdater$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>ExtractButton</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>ExtractEditText</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget$CCLineBox</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>AutoCompleteTextView</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>Button</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>CheckBox</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>CheckedTextView</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>Chronometer</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>CompoundButton</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>DateTimeView</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>DigitalClock</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>EditText</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>MultiAutoCompleteTextView</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>NumberPicker$CustomEditText</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>RadioButton</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>SearchView$SearchAutoComplete</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>Switch</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>TextClock</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>TextViewWithCircularIndicator</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>ToggleButton</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>ActionMenuItemView</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>IconMenuItemView</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>DialogTitle</class>
      <method>performLongClick</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>requestPowerState</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.hardware.display.DisplayManagerInternal$DisplayPowerRequest</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>sendUpdatePowerState</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>access$1000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayPowerController</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerState$PhotonicModulator</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>computeNewConfigurationLocked</method>
      <returnType>Configuration</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getDisplayContentLocked</method>
      <returnType>DisplayContent</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>resetTaskIfNeededLocked</method>
      <returnType>ActivityRecord</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$ActivityContainer</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$VirtualActivityContainer</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityView$ActivityContainerWrapper</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayManagerService$LocalService</class>
      <method>requestPowerState</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.hardware.display.DisplayManagerInternal$DisplayPowerRequest</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayPowerController</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>updateBrightness</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController$8</class>
      <method>onSensorChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.hardware.SensorEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerState</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.DisplayBlanker</parameter>
        <parameter>com.android.server.lights.Light</parameter>
        <parameter>com.android.server.display.ColorFade</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>getPendingLayoutChanges</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>setPendingLayoutChanges</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>updateAppWindowsLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>updateWallpaperLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>screenshotApplications</method>
      <returnType>Bitmap</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getDefaultDisplayContentLocked</method>
      <returnType>DisplayContent</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getWindowListLocked</method>
      <returnType>WindowList</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>addWindow</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.server.wm.Session</parameter>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getBaseDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getInitialDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>createDisplayContentLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.Display</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>displayReady</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getBaseDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getInitialDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityView$ActivityContainerWrapper</class>
      <method>finalize</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityView</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.hardware.display</package>
      <class>DisplayManagerInternal</class>
      <method>requestPowerState</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.hardware.display.DisplayManagerInternal$DisplayPowerRequest</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController$1</class>
      <method>onAnimationEnd</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.animation.Animator</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController$2</class>
      <method>onAnimationEnd</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController$3</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController$Callbacks</class>
      <method>updateBrightness</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>initialize</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>setAppLayoutChanges</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.AppWindowAnimator</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>hideWallpapersLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>prepareSurfaceLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>setSurfaceBoundariesLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>screenshotApplications</method>
      <returnType>Bitmap</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>screenshotApplications</method>
      <returnType>Bitmap</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>screenshotActivities</method>
      <returnType>Bitmap</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier$MagnifiedViewport</class>
      <method>populateWindowsOnScreenLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.util.SparseArray</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$WindowsForAccessibilityObserver</class>
      <method>populateVisibleWindowsOnScreenLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.util.SparseArray</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getDefaultDisplayInfoLocked</method>
      <returnType>DisplayInfo</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getDefaultWindowListLocked</method>
      <returnType>WindowList</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>adjustWallpaperWindowsLocked</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getOrientationFromAppTokensLocked</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getPreferredOptionsPanelGravity</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>handleAnimatingStoppedAndTransitionLocked</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>createWatermarkInTransaction</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.server.input.InputManagerService</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>rebuildAppWindowListLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>saveLastInputMethodWindowForTransition</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>setAppVisibility</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>showCircularMask</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>showEmulatorDisplayOverlay</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>showStrictModeViolation</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>startFreezingDisplayLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>updateWallpaperVisibilityLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowAnimator</class>
      <method>dumpLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.PrintWriter</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getWindowListLocked</method>
      <returnType>WindowList</returnType>
      <parameters>
        <parameter>android.view.Display</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>Session</class>
      <method>addToDisplay</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>Session</class>
      <method>addToDisplayWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>getBaseDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>getBaseDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>getInitialDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>getInitialDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>getBaseDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>getBaseDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ProcessList</class>
      <method>applyDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>getInitialDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>getInitialDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>updateDisplayPowerStateLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>RampAnimator$Listener</class>
      <method>onAnimationEnd</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>updateAutoBrightness</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AppWindowAnimator</class>
      <method>stepAnimationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>destroyDeferredSurfaceLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>destroySurfaceLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>finishExit</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>screenshotApplications</method>
      <returnType>Bitmap</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>startPausingLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>handleLaunchTaskBehindCompleteLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>TaskRecord</class>
      <method>getTaskThumbnailLocked</method>
      <returnType>ActivityManager$TaskThumbnail</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier$MagnifiedViewport</class>
      <method>recomputeBoundsLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$WindowsForAccessibilityObserver</class>
      <method>computeChangedWindows</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>applyAnimationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.wm.AppWindowToken</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>checkWaitingForWindowsLocked</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>inputMethodClientHasFocus</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.internal.view.IInputMethodClient</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>moveInputMethodWindowsIfNeededLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>findDesiredInputMethodWindowIndexLocked</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>getOrientationFromWindowsLocked</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>addInputMethodWindowToListLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>moveInputMethodDialogsLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>updateStatusBarVisibilityLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>getPreferredOptionsPanelGravity</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>getPreferredOptionsPanelGravity</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.server.input.InputManagerService</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>com.android.server.wm.WindowManagerService$1</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>unbindCurrentMethodLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>setAppVisibility</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>setAppVisibility</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>processStoppingActivitiesLocked</method>
      <returnType>ArrayList</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>setVisibile</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>showCircularDisplayMaskIfNeeded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>showEmulatorDisplayOverlayIfNeeded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>access$800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>dumpAnimatorLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.PrintWriter</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DragState</class>
      <method>getTouchedWinAtPointLw</method>
      <returnType>WindowState</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DragState</class>
      <method>broadcastDragStartedLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub$Proxy</class>
      <method>addToDisplay</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub</class>
      <method>addToDisplay</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>Session</class>
      <method>add</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub$Proxy</class>
      <method>addToDisplayWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub</class>
      <method>addToDisplayWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>Session</class>
      <method>addWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>getBaseDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>getInitialDisplayDensity</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>getBaseDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>getInitialDisplaySize</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.graphics.Point</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>updatePowerStateLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>RampAnimator$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>RampAnimator</class>
      <method>animateTo</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>access$300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.AutomaticBrightnessController</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>configure</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>updateAmbientLux</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowState</class>
      <method>removeLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>rebuildAppWindowListLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>cancelExitAnimationForNextAnimationLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>checkReadyForSleepLocked</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>pauseBackStacks</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>pauseChildStacks</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>getTaskThumbnail</method>
      <returnType>ActivityManager$TaskThumbnail</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier$MagnifiedViewport</class>
      <method>drawWindowIfNeededLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier$MagnifiedViewport</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.AccessibilityController$DisplayMagnifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier$MagnifiedViewport</class>
      <method>onRotationChangedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier</class>
      <method>onWindowLayersChangedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier</class>
      <method>setMagnificationSpecLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MagnificationSpec</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$WindowsForAccessibilityObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
        <parameter>android.view.WindowManagerInternal$WindowsForAccessibilityCallback</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$WindowsForAccessibilityObserver</class>
      <method>scheduleComputeChangedWindowsLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub$Proxy</class>
      <method>inputMethodClientHasFocus</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.internal.view.IInputMethodClient</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager$Stub</class>
      <method>inputMethodClientHasFocus</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.internal.view.IInputMethodClient</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>getPreferredOptionsPanelGravity</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$2</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>startInputInnerLocked</method>
      <returnType>InputBindResult</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>onServiceConnected</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ComponentName</parameter>
        <parameter>android.os.IBinder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>resetAllInternalStateLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>updateInputMethodsFromSettingsLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>setAppVisibility</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityRecord</class>
      <method>windowsVisible</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>activityIdleInternalLocked</method>
      <returnType>ActivityRecord</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>boolean</parameter>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>ensureActivitiesVisibleLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>dump</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.FileDescriptor</parameter>
        <parameter>java.io.PrintWriter</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DragState</class>
      <method>notifyDropLw</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>DragState</class>
      <method>notifyMoveLw</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession</class>
      <method>addToDisplay</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub$Proxy</class>
      <method>add</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub</class>
      <method>add</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession</class>
      <method>addToDisplayWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub$Proxy</class>
      <method>addWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession$Stub</class>
      <method>addWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.wm</package>
      <class>Wm</class>
      <method>runDisplayDensity</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.wm</package>
      <class>Wm</class>
      <method>runDisplaySize</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.view</package>
      <class>RotationPolicy</class>
      <method>getRotationLockOrientation</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$1100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>acquireWakeLockInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.WorkSource</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>goToSleepInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>handleBatteryStateChangedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>handleSandman</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>handleSettingsChangedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>handleUserActivityTimeout</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>napInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>removeWakeLockLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService$WakeLock</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>setDozeOverrideFromDreamManagerInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>setMaximumScreenOffTimeoutFromDeviceAdminInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>setScreenBrightnessOverrideFromWindowManagerInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>setTemporaryScreenAutoBrightnessAdjustmentSettingOverrideInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>setTemporaryScreenBrightnessSettingOverrideInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>setUserActivityTimeoutOverrideFromWindowManagerInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>userActivityInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>wakeUpInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>DisplayPowerController</class>
      <method>animateScreenBrightness</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController$2</class>
      <method>onTwilightStateChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>handleLightSensorEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>updateAmbientLux</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>shutdownLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>checkReadyForSleepLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>getTaskThumbnail</method>
      <returnType>ActivityManager$TaskThumbnail</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier</class>
      <method>drawMagnifiedRegionBorderIfNeededLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
        <parameter>android.view.WindowManagerInternal$MagnificationCallbacks</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController$DisplayMagnifier</class>
      <method>onRotationChangedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>onWindowLayersChangedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>setMagnificationSpecLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MagnificationSpec</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>setWindowsForAccessibilityCallback</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerInternal$WindowsForAccessibilityCallback</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>onRotationChangedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.DisplayContent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>onSomeWindowResizedOrMovedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>onWindowFocusChangedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>onWindowTransitionLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowState</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowManager</class>
      <method>inputMethodClientHasFocus</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.internal.view.IInputMethodClient</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>getOptionsPanelGravity</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>startInputUncheckedLocked</method>
      <returnType>InputBindResult</returnType>
      <parameters>
        <parameter>com.android.server.InputMethodManagerService$ClientState</parameter>
        <parameter>com.android.internal.view.IInputContext</parameter>
        <parameter>android.view.inputmethod.EditorInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>systemRunning</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.statusbar.StatusBarManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>resetStateIfCurrentLocaleChangedLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>switchUserLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$SettingsObserver</class>
      <method>onChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>buildInputMethodListLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.HashMap</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>updateFromSettingsLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityRecord$Token</class>
      <method>windowsVisible</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor$ActivityStackSupervisorHandler</class>
      <method>activityIdleInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>ensureActivitiesVisibleLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>goToSleep</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>CompatModePackages</class>
      <method>setPackageScreenCompatModeLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine</class>
      <method>updateSurface</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>ViewRootImpl</class>
      <method>setView</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.View</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>android.view.View</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession</class>
      <method>add</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
        <parameter>android.view.InputChannel</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>SurfaceView</class>
      <method>updateWindow</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IWindowSession</class>
      <method>addWithoutInputChannel</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.view.IWindow</parameter>
        <parameter>int</parameter>
        <parameter>android.view.WindowManager$LayoutParams</parameter>
        <parameter>int</parameter>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.wm</package>
      <class>Wm</class>
      <method>onRun</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$2</class>
      <method>onProximityNegative</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$2</class>
      <method>onProximityPositive</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$2</class>
      <method>onStateChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$DockReceiver</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$3100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.WorkSource</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$3800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$1900</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$2400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$2100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$2300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$3900</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>handleWakeLockDeath</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService$WakeLock</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>releaseWakeLockInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$5200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$4600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$5100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$4800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$4700</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$5300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$3600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>userActivityFromNative</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$3700</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>access$200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.AutomaticBrightnessController</parameter>
        <parameter>long</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.display.AutomaticBrightnessController</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>shutdown</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>activitySleptLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>goingToSleepLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>completePauseLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>scheduleSleepTimeout</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>getTaskThumbnail</method>
      <returnType>ActivityManager$TaskThumbnail</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>drawMagnifiedRegionBorderIfNeededLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>AccessibilityController</class>
      <method>setMagnificationCallbacksLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerInternal$MagnificationCallbacks</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>assignLayersLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowList</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$LocalService</class>
      <method>setMagnificationSpec</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MagnificationSpec</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$LocalService</class>
      <method>setWindowsForAccessibilityCallback</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerInternal$WindowsForAccessibilityCallback</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowState</class>
      <method>reportResized</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowStateAnimator</class>
      <method>applyEnterAnimationLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>startInputLocked</method>
      <returnType>InputBindResult</returnType>
      <parameters>
        <parameter>com.android.internal.view.IInputMethodClient</parameter>
        <parameter>com.android.internal.view.IInputContext</parameter>
        <parameter>android.view.inputmethod.EditorInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>onOptionsPanelRotationChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>openPanel</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.PhoneWindow$PanelFeatureState</parameter>
        <parameter>android.view.KeyEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>access$1100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.InputMethodManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>access$1000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.InputMethodManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$MyPackageMonitor</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IApplicationToken$Stub$Proxy</class>
      <method>windowsVisible</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IApplicationToken$Stub</class>
      <method>windowsVisible</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>scheduleIdleTimeoutLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>scheduleIdleLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>handleAppDiedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStackSupervisor</class>
      <method>attachApplicationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>CompatModePackages</class>
      <method>setFrontActivityScreenCompatModeLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>CompatModePackages</class>
      <method>setPackageScreenCompatModeLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine</class>
      <method>attach</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.service.wallpaper.WallpaperService$IWallpaperEngineWrapper</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine</class>
      <method>doDisplayPaddingChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.graphics.Rect</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine</class>
      <method>reportVisibility</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine</class>
      <method>setOffsetNotificationsEnabled</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine</class>
      <method>setTouchEventsEnabled</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$IWallpaperEngineWrapper</class>
      <method>executeMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerGlobal</class>
      <method>addView</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.View</parameter>
        <parameter>android.view.ViewGroup$LayoutParams</parameter>
        <parameter>android.view.Display</parameter>
        <parameter>android.view.Window</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.os</package>
      <class>BaseCommand</class>
      <method>onRun</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$BatteryReceiver</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>scheduleSandmanLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$SettingsObserver</class>
      <method>onChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$UserSwitchedReceiver</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>updateUserActivitySummaryLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$2600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>com.android.server.power.PowerManagerService$WakeLock</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$3200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$LocalService</class>
      <method>setDozeOverrideFromDreamManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$LocalService</class>
      <method>setScreenBrightnessOverrideFromWindowManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$LocalService</class>
      <method>setUserActivityTimeoutOverrideFromWindowManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.display</package>
      <class>AutomaticBrightnessController$1</class>
      <method>onSensorChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.hardware.SensorEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>shutdown</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$13</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>goToSleepIfNeededLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>activityPausedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>getTaskThumbnail</method>
      <returnType>ActivityManager$TaskThumbnail</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$LocalService</class>
      <method>setMagnificationCallbacks</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerInternal$MagnificationCallbacks</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerInternal</class>
      <method>setMagnificationSpec</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MagnificationSpec</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerInternal</class>
      <method>setWindowsForAccessibilityCallback</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerInternal$WindowsForAccessibilityCallback</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow$RotationWatcher</class>
      <method>dispatchRotationChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>onKeyUpPanel</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.view.KeyEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>openPanel</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.view.KeyEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>openPanelsAfterRestore</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>reopenMenu</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>togglePanel</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.view.KeyEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$4</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$3</class>
      <method>onUserSwitching</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.IRemoteCallback</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.content</package>
      <class>PackageMonitor</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>IApplicationToken$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IApplicationToken</class>
      <method>windowsVisible</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>clearLaunchTime</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>completeResumeLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>forceStopPackageLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>attachApplicationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.app.IApplicationThread</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>removeProcessLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>startProcessLocked</method>
      <returnType>ProcessRecord</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.ComponentName</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>java.lang.Runnable</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>appDiedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>int</parameter>
        <parameter>android.app.IApplicationThread</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>setPackageScreenCompatMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>CompatModeDialog$1</class>
      <method>onCheckedChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.widget.CompoundButton</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.service.wallpaper</package>
      <class>WallpaperService$Engine</class>
      <method>doVisibilityChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerImpl</class>
      <method>addView</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.View</parameter>
        <parameter>android.view.ViewGroup$LayoutParams</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.os</package>
      <class>BaseCommand</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>access$2000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.PowerManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>updateDreamLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$WakeLock</class>
      <method>binderDied</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.os</package>
      <class>PowerManagerInternal</class>
      <method>setDozeOverrideFromDreamManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.os</package>
      <class>PowerManagerInternal</class>
      <method>setScreenBrightnessOverrideFromWindowManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.os</package>
      <class>PowerManagerInternal</class>
      <method>setUserActivityTimeoutOverrideFromWindowManager</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>shutdown</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>finishRunningVoiceLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>goingToSleep</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerInternal</class>
      <method>setMagnificationCallbacks</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.WindowManagerInternal$MagnificationCallbacks</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnificationController</class>
      <method>setMagnificationSpec</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MagnificationSpec</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>updateWindowsForAccessibilityCallbackLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService$UserState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow$RotationWatcher$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>onKeyUp</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.view.KeyEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>access$2200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.PhoneWindow</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>onConfigurationChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow</class>
      <method>onMenuModeChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.view.menu.MenuBuilder</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IUserSwitchObserver$Stub$Proxy</class>
      <method>onUserSwitching</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.IRemoteCallback</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.content</package>
      <class>PackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsApplication$SmsPackageMonitor</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$3</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>LocationManagerService$4</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService$LauncherAppsImpl$MyPackageMonitor</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.print</package>
      <class>PrintManagerService$PrintManagerImpl$2</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>ServiceWatcher$2</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbSettingsManager$MyPackageMonitor</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityRecord$Token</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>access$400</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityManagerService</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>broadcastIntentLocked</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.IIntentReceiver</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>finishInstrumentationLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>forceStopPackageLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>forceStopUserLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>handleAppCrashLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>killPackageProcessesLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>startProcessLocked</method>
      <returnType>ProcessRecord</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.ComponentName</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>startIsolatedProcess</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.Runnable</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$AppDeathRecipient</class>
      <method>binderDied</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>appDiedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>setPackageScreenCompatMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.am</package>
      <class>Am</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.appops</package>
      <class>AppOpsCommand</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.dpm</package>
      <class>Dpm</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.media</package>
      <class>Media</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.wm</package>
      <class>Wm</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$DreamReceiver</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.dreams</package>
      <class>DreamManagerService</class>
      <method>startDozingInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.dreams</package>
      <class>DreamManagerService</class>
      <method>stopDozingInternal</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$LocalService</class>
      <method>goingToSleep</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>int</parameter>
        <parameter>com.android.server.accessibility.AccessibilityManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>onDestroy</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnificationController</class>
      <method>offsetMagnifiedRegionCenter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnificationController</class>
      <method>reset</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnificationController</class>
      <method>setScaleAndMagnifiedRegionCenter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>onUserStateChangedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService$UserState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow$DecorView</class>
      <method>dispatchKeyEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.KeyEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindow$DecorView</class>
      <method>onAttachedToWindow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>MenuBuilder$Callback</class>
      <method>onMenuModeChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.view.menu.MenuBuilder</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActivityChooserModel$DataModelPackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>ResolverActivity$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsApplication$SmsPackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$3</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$MyPackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>LocationManagerService$4</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService$LauncherAppsImpl$MyPackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.print</package>
      <class>PrintManagerService$PrintManagerImpl$2</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.search</package>
      <class>SearchManagerService$MyPackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>ServiceWatcher$2</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>TextServicesManagerService$TextServicesMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.trust</package>
      <class>TrustManagerService$3</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.tv</package>
      <class>TvInputManagerService$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbSettingsManager$MyPackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wallpaper</package>
      <class>WallpaperManagerService$MyPackageMonitor</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$3</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>killApplicationWithAppId</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>deliverPreBootCompleted</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.Runnable</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>access$200</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityManagerService</parameter>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.IIntentReceiver</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>closeSystemDialogsLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>finishUserBoot</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.UserStartedState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>inputDispatchingTimedOut</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>finishUserStop</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.UserStartedState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>makeAppCrashingLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>killAppAtUsersRequest</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>android.app.Dialog</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>killUid</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>bringUpServiceLocked</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>com.android.server.am.ServiceRecord</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>bindBackupAgent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>processNextBroadcast</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$LocalService</class>
      <method>startIsolatedProcess</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.Runnable</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>realStartServiceLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ServiceRecord</parameter>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>setPackageScreenCompatMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.am</package>
      <class>Am</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.appops</package>
      <class>AppOpsCommand</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.dpm</package>
      <class>Dpm</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.media</package>
      <class>Media</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.wm</package>
      <class>Wm</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.dreams</package>
      <class>DreamManagerService</class>
      <method>access$1800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.dreams.DreamManagerService</parameter>
        <parameter>android.os.IBinder</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.dreams</package>
      <class>DreamManagerService</class>
      <method>access$1900</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.dreams.DreamManagerService</parameter>
        <parameter>android.os.IBinder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread</class>
      <method>beginShutdownSequence</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerInternal</class>
      <method>goingToSleep</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>enableFeatures</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>disableFeatures</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>EventStreamTransformation</class>
      <method>onDestroy</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnifiedContentInteractonStateHandler</class>
      <method>onScroll</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>handleOnRectangleOnScreenRequested</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$DetectingStateHandler</class>
      <method>onActionTap</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$ScreenStateObserver</class>
      <method>handleOnScreenStateChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$StateViewportDraggingHandler</class>
      <method>onMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>resetMagnificationIfNeeded</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$DetectingStateHandler</class>
      <method>onActionTapAndHold</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnificationController</class>
      <method>setMagnifiedRegionCenter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnificationController</class>
      <method>setScale</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>float</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>handleOnMagnifiedBoundsChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.graphics.Region</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>access$500</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService</parameter>
        <parameter>com.android.server.accessibility.AccessibilityManagerService$UserState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>ensureWindowsAvailableTimed</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>registerUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
        <parameter>android.accessibilityservice.AccessibilityServiceInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>switchUser</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>temporaryEnableAccessibilityStateUntilKeyguardRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ComponentName</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActionMenuView$MenuBuilderCallback</class>
      <method>onMenuModeChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.view.menu.MenuBuilder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>MenuBuilder</class>
      <method>changeMenuMode</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.content</package>
      <class>PackageMonitor</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>killApplicationWithAppId</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$29</class>
      <method>performReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>finishUserSwitch</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.UserStartedState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>inputDispatchingTimedOut</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityRecord</class>
      <method>keyDispatchingTimedOut</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$28</class>
      <method>performReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityStack</class>
      <method>releaseBackgroundResources</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>killUid</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>startServiceInnerLocked</method>
      <returnType>ComponentName</returnType>
      <parameters>
        <parameter>com.android.server.am.ActiveServices$ServiceMap</parameter>
        <parameter>android.content.Intent</parameter>
        <parameter>com.android.server.am.ServiceRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>performServiceRestartLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ServiceRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>bindBackupAgent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>backgroundServicesFinishedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>broadcastTimeoutLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>scheduleBroadcastsLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerInternal</class>
      <method>startIsolatedProcess</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.Runnable</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>attachApplicationLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>setPackageScreenCompatMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.am</package>
      <class>Am</class>
      <method>runScreenCompat</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread</class>
      <method>shutdownInner</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>Notifier$2</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>onInstalled</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>setEnabledFeatures</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>onUninstalled</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>updateInputFilter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService$UserState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>access$100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$DetectingStateHandler</class>
      <method>onMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$ScreenStateObserver</class>
      <method>access$2900</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier$ScreenStateObserver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$StateViewportDraggingHandler</class>
      <method>access$600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier$StateViewportDraggingHandler</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>handleOnRotationChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>handleOnUserContextChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$DetectingStateHandler</class>
      <method>access$1700</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$MagnifiedContentInteractonStateHandler</class>
      <method>onScale</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.ScaleGestureDetector</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier</parameter>
        <parameter>android.graphics.Region</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$1</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$1</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$1</class>
      <method>onSomePackagesChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$2</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$4</class>
      <method>onClick</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.DialogInterface</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$AccessibilityContentObserver</class>
      <method>onChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$Service</class>
      <method>binderDied</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$Service</class>
      <method>onServiceConnected</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ComponentName</parameter>
        <parameter>android.os.IBinder</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>access$3300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager$Stub$Proxy</class>
      <method>registerUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
        <parameter>android.accessibilityservice.AccessibilityServiceInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager$Stub</class>
      <method>registerUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
        <parameter>android.accessibilityservice.AccessibilityServiceInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>access$800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager$Stub$Proxy</class>
      <method>temporaryEnableAccessibilityStateUntilKeyguardRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ComponentName</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager$Stub</class>
      <method>temporaryEnableAccessibilityStateUntilKeyguardRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ComponentName</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActionMenuPresenter$OpenOverflowRunnable</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>ContextMenuBuilder</class>
      <method>changeMenuMode</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>IconMenuView$1</class>
      <method>onClick</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.View</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.view.menu</package>
      <class>SubMenuBuilder</class>
      <method>changeMenuMode</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActivityChooserModel$DataModelPackageMonitor</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>ResolverActivity$1</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsApplication$SmsPackageMonitor</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>LocationManagerService$4</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService$LauncherAppsImpl$MyPackageMonitor</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.search</package>
      <class>SearchManagerService$MyPackageMonitor</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>ServiceWatcher$2</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>TextServicesManagerService$TextServicesMonitor</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.trust</package>
      <class>TrustManagerService$3</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.tv</package>
      <class>TvInputManagerService$1</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbSettingsManager$MyPackageMonitor</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1</class>
      <method>onHandleForceStop</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>killApplicationWithAppId</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>IIntentReceiver$Stub$Proxy</class>
      <method>performReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>IIntentReceiver$Stub</class>
      <method>performReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>inputDispatchingTimedOut</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityRecord$Token</class>
      <method>keyDispatchingTimedOut</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>killUid</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>startServiceLocked</method>
      <returnType>ComponentName</returnType>
      <parameters>
        <parameter>android.app.IApplicationThread</parameter>
        <parameter>android.content.Intent</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices$ServiceMap</class>
      <method>rescheduleDelayedStarts</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices$ServiceRestarter</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>bindBackupAgent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>backgroundServicesFinishedLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>setBroadcastTimeoutLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>registerReceiver</method>
      <returnType>Intent</returnType>
      <parameters>
        <parameter>android.app.IApplicationThread</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.IIntentReceiver</parameter>
        <parameter>android.content.IntentFilter</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>sendPendingBroadcastsLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>skipCurrentReceiverLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>skipPendingBroadcastLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewFactory</class>
      <method>createRelroFile</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.am</package>
      <class>Am</class>
      <method>onRun</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread$1</class>
      <method>onClick</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.DialogInterface</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread</class>
      <method>reboot</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread</class>
      <method>rebootSafeMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>ShutdownThread</class>
      <method>shutdown</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>access$2100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService</parameter>
        <parameter>com.android.server.accessibility.AccessibilityManagerService$UserState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>onMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>access$300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>access$200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.content</package>
      <class>PackageMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$UserState$1</class>
      <method>binderDied</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$UserState</class>
      <method>onSwitchToAnotherUser</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>unregisterUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$Service$2</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$Service</class>
      <method>getWindow</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$Service</class>
      <method>getWindows</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager</class>
      <method>registerUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.IBinder</parameter>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
        <parameter>android.accessibilityservice.AccessibilityServiceInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager</class>
      <method>temporaryEnableAccessibilityStateUntilKeyguardRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ComponentName</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>killApplication</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>IIntentReceiver$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>IIntentReceiver</class>
      <method>performReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>inputDispatchingTimedOut</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IApplicationToken$Stub$Proxy</class>
      <method>keyDispatchingTimedOut</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IApplicationToken$Stub</class>
      <method>keyDispatchingTimedOut</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices$ServiceMap</class>
      <method>ensureNotStartingBackground</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ServiceRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService</class>
      <method>bindToAgentSynchronous</method>
      <returnType>IBackupAgent</returnType>
      <parameters>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>registerReceiver</method>
      <returnType>Intent</returnType>
      <parameters>
        <parameter>android.app.IApplicationThread</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.IIntentReceiver</parameter>
        <parameter>android.content.IntentFilter</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>sendPendingBroadcastsLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>skipCurrentReceiverLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>skipPendingBroadcastLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewFactory</class>
      <method>prepareWebViewInSystemServer</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService$3</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>rebootSafeMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService</class>
      <method>shutdown</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>EventStreamTransformation</class>
      <method>onMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$DetectingStateHandler</class>
      <method>sendDelayedMotionEvents</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>onUserContextChanged</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActivityChooserModel$DataModelPackageMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>ResolverActivity$1</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsApplication$SmsPackageMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$MyPackageMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>LocationManagerService$4</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService$LauncherAppsImpl$MyPackageMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.search</package>
      <class>SearchManagerService$MyPackageMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>TextServicesManagerService$TextServicesMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.trust</package>
      <class>TrustManagerService$3</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wallpaper</package>
      <class>WallpaperManagerService$MyPackageMonitor</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager$Stub$Proxy</class>
      <method>unregisterUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager$Stub</class>
      <method>unregisterUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>IAccessibilityServiceConnection$Stub$Proxy</class>
      <method>getWindow</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>IAccessibilityServiceConnection$Stub</class>
      <method>getWindow</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>IAccessibilityServiceConnection$Stub$Proxy</class>
      <method>getWindows</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>IAccessibilityServiceConnection$Stub</class>
      <method>getWindows</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomationConnection</class>
      <method>registerUiTestAutomationServiceLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>EnableAccessibilityController</class>
      <method>enableAccessibility</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>scanPackageDirtyLI</method>
      <returnType>PackageParser$Package</returnType>
      <parameters>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>long</parameter>
        <parameter>android.os.UserHandle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>deletePackageLI</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.UserHandle</parameter>
        <parameter>boolean</parameter>
        <parameter>int[]</parameter>
        <parameter>boolean[]</parameter>
        <parameter>int</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageRemovedInfo</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>replaceSystemPackageLI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.os.UserHandle</parameter>
        <parameter>int[]</parameter>
        <parameter>boolean[]</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageInstalledInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>LoadedApk$ReceiverDispatcher$InnerReceiver</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>PendingIntent$FinishedDispatcher</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>IntentSender$FinishedDispatcher</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.am</package>
      <class>Am$IntentReceiver</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>MonkeyNetworkMonitor</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$14</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$16</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$24</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$25</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$28</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$29</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$8</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService$12</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>performReceiveLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>android.content.IIntentReceiver</parameter>
        <parameter>android.content.Intent</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>InputMonitor</class>
      <method>notifyANR</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>com.android.server.input.InputApplicationHandle</parameter>
        <parameter>com.android.server.input.InputWindowHandle</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>IApplicationToken</class>
      <method>keyDispatchingTimedOut</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>bringDownServiceLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ServiceRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$FullBackupEngine</class>
      <method>backupOnePackage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.content.pm.PackageInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$FullRestoreEngine</class>
      <method>restoreOneFile</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.io.InputStream</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformAdbRestoreTask</class>
      <method>restoreOneFile</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.io.InputStream</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>invokeNextAgent</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformUnifiedRestoreTask</class>
      <method>restoreKeyValue</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>registerReceiver</method>
      <returnType>Intent</returnType>
      <parameters>
        <parameter>android.app.IApplicationThread</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.content.IIntentReceiver</parameter>
        <parameter>android.content.IntentFilter</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>cleanUpApplicationRecordLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>startAppProblemLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>processStartTimedOutLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewFactory</class>
      <method>onWebViewUpdateInstalled</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewFactory</class>
      <method>prepareWebViewInSystemServer</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy$WindowManagerFuncs</class>
      <method>rebootSafeMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view</package>
      <class>WindowManagerPolicy$WindowManagerFuncs</class>
      <method>shutdown</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>handleMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>handleMotionEventStateDelegating</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>sendMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$DetectingStateHandler</class>
      <method>access$1800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.ScreenMagnifier$DetectingStateHandler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier$DetectingStateHandler</class>
      <method>transitionToDelegatingStateAndClear</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>IAccessibilityManager</class>
      <method>unregisterUiTestAutomationService</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>IAccessibilityServiceConnection</class>
      <method>getWindow</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>IAccessibilityServiceConnection$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>IAccessibilityServiceConnection</class>
      <method>getWindows</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomationConnection</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>EnableAccessibilityController</class>
      <method>access$200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.EnableAccessibilityController</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>scanPackageLI</method>
      <returnType>PackageParser$Package</returnType>
      <parameters>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>long</parameter>
        <parameter>android.os.UserHandle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>scanPackageLI</method>
      <returnType>PackageParser$Package</returnType>
      <parameters>
        <parameter>java.io.File</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>long</parameter>
        <parameter>android.os.UserHandle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>deletePackageX</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>installNewPackageLI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.os.UserHandle</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageInstalledInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>replaceNonSystemPackageLI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.os.UserHandle</parameter>
        <parameter>int[]</parameter>
        <parameter>boolean[]</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageInstalledInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>unloadMediaPackages</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.util.ArrayMap</parameter>
        <parameter>int[]</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>replacePackageLI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.pm.PackageParser$Package</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>android.os.UserHandle</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageInstalledInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>BroadcastQueue</class>
      <method>deliverToRegisteredReceiverLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.BroadcastRecord</parameter>
        <parameter>com.android.server.am.BroadcastFilter</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.input</package>
      <class>InputManagerService$WindowManagerCallbacks</class>
      <method>notifyANR</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>com.android.server.input.InputApplicationHandle</parameter>
        <parameter>com.android.server.input.InputWindowHandle</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>forceStopLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>bringDownServiceIfNeededLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ServiceRecord</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>killServicesLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>processStartTimedOutLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformAdbBackupTask</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformFullTransportBackupTask$SinglePackageBackupRunner</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformUnifiedRestoreTask$EngineThread</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformAdbRestoreTask</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>execute</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformUnifiedRestoreTask</class>
      <method>execute</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>MonkeyNetworkMonitor</class>
      <method>register</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.app.IActivityManager</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>trimApplications</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>makeAppNotRespondingLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>access$300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityManagerService</parameter>
        <parameter>com.android.server.am.ProcessRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.webkit</package>
      <class>WebViewUpdateService</class>
      <method>onWebViewUpdateInstalled</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$PowerAction</class>
      <method>onLongPress</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$PowerAction</class>
      <method>onPress</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>processBatchedEvents</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>access$2800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.TouchExplorer</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>handleMotionEventStateDelegating</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>handleMotionEventStateDragging</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>handleMotionEventStateTouchExploring</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>sendActionDownAndUp</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>sendDownForAllNotInjectedPointers</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>sendHoverExitAndTouchExplorationGestureEndIfNeeded</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>sendTouchExplorationGestureStartAndHoverEnterIfNeeded</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>sendUpForInjectedDownPointers</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomationConnection</class>
      <method>unregisterUiTestAutomationServiceLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>AccessibilityInteractionClient</class>
      <method>getWindow</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$Service</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>AccessibilityInteractionClient</class>
      <method>getWindows</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection$Stub$Proxy</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection$Stub</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>EnableAccessibilityController</class>
      <method>onInterceptTouchEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>deleteSystemPackageLI</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.pm.PackageSetting</parameter>
        <parameter>int[]</parameter>
        <parameter>boolean[]</parameter>
        <parameter>int</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageRemovedInfo</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.server.pm.Installer</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>loadMediaPackages</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.util.ArrayMap</parameter>
        <parameter>int[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>scanDirLI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.File</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>access$3900</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.server.pm.PackageManagerService</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>installPackageLI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.pm.PackageManagerService$InstallArgs</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageInstalledInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>updateExternalMediaStatusInner</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.input</package>
      <class>InputManagerService</class>
      <method>notifyANR</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>com.android.server.input.InputApplicationHandle</parameter>
        <parameter>com.android.server.input.InputWindowHandle</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>removeConnectionLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ConnectionRecord</parameter>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>com.android.server.am.ActivityRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>stopServiceLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ServiceRecord</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$BackupRestoreTask</class>
      <method>execute</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>Monkey</class>
      <method>getSystemInterfaces</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>setProcessLimit</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>startProcessLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.webkit</package>
      <class>WebViewUpdateService</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.webkit.WebViewUpdateService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$LongPressAction</class>
      <method>onLongPress</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$Action</class>
      <method>onPress</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$SinglePressAction</class>
      <method>onPress</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>access$100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityInputFilter</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$SendHoverEnterAndMoveDelayed</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$SendHoverExitDelayed</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>onMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>access$1700</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.TouchExplorer</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>access$2600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.TouchExplorer</parameter>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>access$2400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.TouchExplorer</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>clear</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomationConnection</class>
      <method>disconnect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>AccessibilityNodeInfo</class>
      <method>getWindow</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>AccessibilityWindowInfo</class>
      <method>getChild</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>AccessibilityWindowInfo</class>
      <method>getParent</method>
      <returnType>AccessibilityWindowInfo</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.accessibilityservice</package>
      <class>AccessibilityService</class>
      <method>getWindows</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomation</class>
      <method>getWindows</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accessibilityservice.IAccessibilityServiceClient</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$GlobalActionsDialog</class>
      <method>dispatchTouchEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>main</method>
      <returnType>PackageManagerService</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.android.server.pm.Installer</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService$14</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService$8</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>access$2300</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.pm.PackageManagerService</parameter>
        <parameter>com.android.server.pm.PackageManagerService$InstallArgs</parameter>
        <parameter>com.android.server.pm.PackageManagerService$PackageInstalledInfo</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>access$4400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.pm.PackageManagerService</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService</class>
      <method>scanAvailableAsecs</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActiveServices</class>
      <method>cleanUpRemovedTaskLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>android.content.ComponentName</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>executeNextState</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.backup.BackupManagerService$BackupState</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>Monkey</class>
      <method>run</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManagerNative</class>
      <method>setProcessLimit</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>addAppLocked</method>
      <returnType>ProcessRecord</returnType>
      <parameters>
        <parameter>android.content.pm.ApplicationInfo</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>startProcessLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.ProcessRecord</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.webkit</package>
      <class>WebViewUpdateService$1</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$2</class>
      <method>onItemLongClick</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.widget.AdapterView</parameter>
        <parameter>android.view.View</parameter>
        <parameter>int</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions</class>
      <method>onClick</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.DialogInterface</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions</class>
      <method>handleShow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter$1</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$SendHoverEnterAndMoveDelayed</class>
      <method>forceSendAndRemove</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$SendHoverExitDelayed</class>
      <method>forceSendAndRemove</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$DoubleTapDetector</class>
      <method>onDoubleTap</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$PerformLongPressDelayed</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>clear</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer</class>
      <method>handleMotionEventGestureDetecting</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection$Stub$Proxy</class>
      <method>disconnect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection$Stub</class>
      <method>disconnect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomationConnection</class>
      <method>shutdown</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomationConnection</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomation</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService$6</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>PackageManagerService$11</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>cleanUpRemovedTaskLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.am.TaskRecord</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>agentErrorCleanup</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>beginBackup</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>operationComplete</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>Monkey</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IActivityManager</class>
      <method>setProcessLimit</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions</class>
      <method>access$1800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.GlobalActions</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions</class>
      <method>showDialog</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$DoubleTapDetector</class>
      <method>onMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>EventStreamTransformation</class>
      <method>clear</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>TouchExplorer$ExitGestureDetectionModeDelayed</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection</class>
      <method>disconnect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection$Stub$Proxy</class>
      <method>shutdown</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection$Stub</class>
      <method>shutdown</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>Instrumentation</class>
      <method>getUiAutomation</method>
      <returnType>UiAutomation</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>MonkeySourceNetworkViews</class>
      <method>setup</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.uiautomator.core</package>
      <class>UiAutomationShellWrapper</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>removeTaskByIdLocked</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>invokeAgentForBackup</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.IBackupAgent</parameter>
        <parameter>com.android.internal.backup.IBackupTransport</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformBackupTask</class>
      <method>handleTimeout</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$BackupRestoreTask</class>
      <method>operationComplete</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>onMotionEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>ScreenMagnifier</class>
      <method>clear</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>UiAutomation</class>
      <method>disconnect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IUiAutomationConnection</class>
      <method>shutdown</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.test</package>
      <class>InstrumentationCoreTestRunner</class>
      <method>getUiAutomation</method>
      <returnType>UiAutomation</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.test</package>
      <class>InstrumentationTestRunner</class>
      <method>getUiAutomation</method>
      <returnType>UiAutomation</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.test</package>
      <class>LaunchPerformanceBase</class>
      <method>getUiAutomation</method>
      <returnType>UiAutomation</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>MonkeySourceNetwork</class>
      <method>startServer</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.uiautomator</package>
      <class>DumpCommand</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.uiautomator</package>
      <class>EventsCommand</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.uiautomator.testrunner</package>
      <class>UiAutomatorTestRunner</class>
      <method>start</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService</class>
      <method>access$1000</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.server.am.ActivityManagerService</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$BackupRestoreTask</class>
      <method>handleTimeout</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService</class>
      <method>opComplete</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityInputFilter</class>
      <method>onInputEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.InputEvent</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>Instrumentation</class>
      <method>finish</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.uiautomator.core</package>
      <class>UiAutomationShellWrapper</class>
      <method>disconnect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>MonkeySourceNetwork</class>
      <method>getNextEvent</method>
      <returnType>MonkeyEvent</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.uiautomator</package>
      <class>Launcher$Command</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.uiautomator.testrunner</package>
      <class>UiAutomatorTestRunner</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.util.List</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$3</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$3</class>
      <method>onPackageRemoved</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService</class>
      <method>handleTimeout</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.Object</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>IBackupManager$Stub$Proxy</class>
      <method>opComplete</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>IBackupManager$Stub</class>
      <method>opComplete</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.test</package>
      <class>InstrumentationCoreTestRunner</class>
      <method>finish</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.test</package>
      <class>InstrumentationTestRunner</class>
      <method>finish</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.test</package>
      <class>LaunchPerformanceBase</class>
      <method>finish</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>MonkeyEventSource</class>
      <method>getNextEvent</method>
      <returnType>MonkeyEvent</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.uiautomator</package>
      <class>Launcher</class>
      <method>main</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.commands.uiautomator</package>
      <class>RunTestCommand</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.content</package>
      <class>PackageMonitor</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.am</package>
      <class>ActivityManagerService$3</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService</class>
      <method>prepareOperationTimeout</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>long</parameter>
        <parameter>com.android.server.backup.BackupManagerService$BackupRestoreTask</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>IBackupManager$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>IBackupManager</class>
      <method>opComplete</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.test</package>
      <class>InstrumentationTestRunner</class>
      <method>onStart</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.commands.monkey</package>
      <class>Monkey</class>
      <method>runMonkeyCycles</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActivityChooserModel$DataModelPackageMonitor</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>ResolverActivity$1</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$1</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$MyPackageMonitor</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>LocationManagerService$4</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService$LauncherAppsImpl$MyPackageMonitor</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>ServiceWatcher$2</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>TextServicesManagerService$TextServicesMonitor</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.trust</package>
      <class>TrustManagerService$3</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.tv</package>
      <class>TvInputManagerService$1</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.usb</package>
      <class>UsbSettingsManager$MyPackageMonitor</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1</class>
      <method>onPackageModified</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.content</package>
      <class>PackageMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$FullBackupEngine$FullBackupRunner</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$FullBackupObbConnection</class>
      <method>backupObbs</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.pm.PackageInfo</parameter>
        <parameter>java.io.OutputStream</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformUnifiedRestoreTask</class>
      <method>initiateOneRestore</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.pm.PackageInfo</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformUnifiedRestoreTask</class>
      <method>restoreFinished</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupAgent$BackupServiceBinder</class>
      <method>doBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupAgent$BackupServiceBinder</class>
      <method>doFullBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupAgent$BackupServiceBinder</class>
      <method>doRestore</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupAgent$BackupServiceBinder</class>
      <method>doRestoreFile</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupAgent$BackupServiceBinder</class>
      <method>doRestoreFinished</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.test</package>
      <class>InstrumentationCoreTestRunner</class>
      <method>onStart</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>ActivityChooserModel$DataModelPackageMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.app</package>
      <class>ResolverActivity$1</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsApplication$SmsPackageMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$1</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$MyPackageMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>LocationManagerService$4</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.pm</package>
      <class>LauncherAppsService$LauncherAppsImpl$MyPackageMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.print</package>
      <class>PrintManagerService$PrintManagerImpl$2</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.search</package>
      <class>SearchManagerService$MyPackageMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>ServiceWatcher$2</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>TextServicesManagerService$TextServicesMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.tv</package>
      <class>TvInputManagerService$1</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$1</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wallpaper</package>
      <class>WallpaperManagerService$MyPackageMonitor</class>
      <method>onPackageChanged</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformUnifiedRestoreTask</class>
      <method>startRestore</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub$Proxy</class>
      <method>doBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub</class>
      <method>doBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub$Proxy</class>
      <method>doFullBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub</class>
      <method>doFullBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub$Proxy</class>
      <method>doRestore</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub</class>
      <method>doRestore</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub$Proxy</class>
      <method>doRestoreFile</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub</class>
      <method>doRestoreFile</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub$Proxy</class>
      <method>doRestoreFinished</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub</class>
      <method>doRestoreFinished</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent</class>
      <method>doBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent</class>
      <method>doFullBackup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent</class>
      <method>doRestore</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent</class>
      <method>doRestoreFile</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.ParcelFileDescriptor</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>IBackupAgent</class>
      <method>doRestoreFinished</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.app.backup.IBackupManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupAgent$BackupServiceBinder</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$FullRestoreEngine$RestoreFileRunnable</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.backup</package>
      <class>BackupManagerService$PerformAdbRestoreTask$RestoreFileRunnable</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Secure</class>
      <method>getUriFor</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaFocusControl$NotificationListenerObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.MediaFocusControl</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>CaptioningManager</class>
      <method>registerObserver</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService$AccessibilityContentObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.accessibility.AccessibilityManagerService</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>CertBlacklister</class>
      <method>registerObservers</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.devicepolicy</package>
      <class>DevicePolicyManagerService$SetupContentObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.devicepolicy.DevicePolicyManagerService</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>InputMethodManagerService$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.InputMethodManagerService</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.location</package>
      <class>LocationBlacklist</class>
      <method>init</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.location</package>
      <class>LocationFudger</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>LocationManagerService</class>
      <method>systemRunning</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.media</package>
      <class>MediaSessionService$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.media.MediaSessionService</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ManagedServices$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.notification.ManagedServices</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.print</package>
      <class>PrintManagerService$PrintManagerImpl</class>
      <method>registerContentObservers</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.search</package>
      <class>SearchManagerService$GlobalSearchProviderObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.search.SearchManagerService</parameter>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService$VoiceInteractionManagerServiceStub$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.voiceinteraction.VoiceInteractionManagerService$VoiceInteractionManagerServiceStub</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wm</package>
      <class>WindowManagerService$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.wm.WindowManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaFocusControl</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Looper</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>android.media.AudioService$VolumeController</parameter>
        <parameter>android.media.AudioService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.view.accessibility</package>
      <class>CaptioningManager</class>
      <method>addCaptioningChangeListener</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.accessibility.CaptioningManager$CaptioningChangeListener</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.accessibility</package>
      <class>AccessibilityManagerService</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>CertBlacklister</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.devicepolicy</package>
      <class>DevicePolicyManagerService</class>
      <method>systemReady</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.media</package>
      <class>MediaSessionService$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.media.MediaSessionService</parameter>
        <parameter>com.android.server.media.MediaSessionService$1</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ManagedServices$SettingsObserver</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.notification.ManagedServices</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>com.android.server.notification.ManagedServices$1</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.print</package>
      <class>PrintManagerService$PrintManagerImpl</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.print.PrintManagerService</parameter>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService$VoiceInteractionManagerServiceStub</class>
      <method>systemRunning</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget</class>
      <method>manageChangeListener</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleController</class>
      <method>addTrack</method>
      <returnType>SubtitleTrack</returnType>
      <parameters>
        <parameter>android.media.MediaFormat</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget</class>
      <method>manageChangeListener</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.devicepolicy</package>
      <class>DevicePolicyManagerService$Lifecycle</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.media</package>
      <class>MediaSessionService</class>
      <method>onStart</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ManagedServices</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>com.android.server.notification.ManagedServices$UserProfiles</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.voiceinteraction</package>
      <class>VoiceInteractionManagerService</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget</class>
      <method>onAttachedToWindow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget</class>
      <method>onDetachedFromWindow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionWidget</class>
      <method>setVisible</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer$2</class>
      <method>addTrack</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>addTimedTextSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.FileDescriptor</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>scanInternalSubtitleTracks</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>selectOrDeselectTrack</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget</class>
      <method>onAttachedToWindow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget</class>
      <method>onDetachedFromWindow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttRenderingWidget</class>
      <method>setVisible</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ConditionProviders</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>com.android.server.notification.ManagedServices$UserProfiles</parameter>
        <parameter>com.android.server.notification.ZenModeHelper</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>ConditionProviders</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>com.android.server.notification.ManagedServices$UserProfiles</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationManagerService$NotificationListeners</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>java.lang.Object</parameter>
        <parameter>com.android.server.notification.ManagedServices$UserProfiles</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.notification</package>
      <class>NotificationManagerService$NotificationListeners</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.notification.NotificationManagerService</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleTrack$RenderingWidget</class>
      <method>setVisible</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer$2</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>addTimedTextSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.FileDescriptor</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>access$600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.MediaPlayer</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>prepare</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>deselectTrack</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>selectTrack</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleTrack</class>
      <method>hide</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleTrack</class>
      <method>show</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>addTimedTextSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>addTimedTextSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer$4</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AsyncPlayer</class>
      <method>startSound</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.AsyncPlayer$Command</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioService$AudioHandler</class>
      <method>onPlaySoundEffect</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>create</method>
      <returnType>MediaPlayer</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>android.view.SurfaceHolder</parameter>
        <parameter>android.media.AudioAttributes</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>create</method>
      <returnType>MediaPlayer</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>int</parameter>
        <parameter>android.media.AudioAttributes</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>Ringtone</class>
      <method>playFallbackRingtone</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>Ringtone</class>
      <method>setUri</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionTrack</class>
      <method>hide</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>SRTTrack</class>
      <method>hide</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleController</class>
      <method>doHide</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleController</class>
      <method>doSelectTrack</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.SubtitleTrack</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>TtmlTrack</class>
      <method>hide</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttTrack</class>
      <method>hide</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>ClosedCaptionTrack</class>
      <method>show</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>SRTTrack</class>
      <method>show</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleController</class>
      <method>doShow</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>TtmlTrack</class>
      <method>show</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>WebVttTrack</class>
      <method>show</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AsyncPlayer</class>
      <method>access$200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.AsyncPlayer</parameter>
        <parameter>android.media.AsyncPlayer$Command</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>create</method>
      <returnType>MediaPlayer</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>android.view.SurfaceHolder</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>AudioPlaybackQueueItem</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>create</method>
      <returnType>MediaPlayer</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>Ringtone</class>
      <method>play</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>RingtoneManager</class>
      <method>getRingtone</method>
      <returnType>Ringtone</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>Ringtone</class>
      <method>setAudioAttributes</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.AudioAttributes</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleController</class>
      <method>access$100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.SubtitleController</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleController</class>
      <method>access$200</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.SubtitleController</parameter>
        <parameter>android.media.SubtitleTrack</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>SubtitleController</class>
      <method>access$000</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.SubtitleController</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AsyncPlayer$Thread</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>create</method>
      <returnType>MediaPlayer</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>PlaybackQueueItem</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.preference</package>
      <class>SeekBarVolumizer</class>
      <method>onStartSample</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>performAuditoryFeedbackForAccessibilityIfNeed</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>handleDockStateChange</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>Notifier</class>
      <method>playWirelessChargingStartedSound</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>RingtoneManager</class>
      <method>getRingtone</method>
      <returnType>Ringtone</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>RingtoneManager</class>
      <method>getRingtone</method>
      <returnType>Ringtone</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>Ringtone</class>
      <method>setStreamType</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AsyncPlayer</class>
      <method>enqueueLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.media.AsyncPlayer$Command</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>AudioPlaybackHandler$MessageLoop</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>PhoneWindowManager</class>
      <method>access$800</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.policy.impl.PhoneWindowManager</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>access$100</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.DockObserver</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>Notifier</class>
      <method>access$600</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.power.Notifier</parameter>
      </parameters>
    </call>
    <call>
      <package>android.preference</package>
      <class>SeekBarVolumizer</class>
      <method>onInitSample</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>EnableAccessibilityController</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.Runnable</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AsyncPlayer</class>
      <method>play</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AsyncPlayer</class>
      <method>stop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>updateLocked</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>Notifier</class>
      <method>onWirelessChargingStarted</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.policy.impl</package>
      <class>GlobalActions$GlobalActionsDialog</class>
      <method>onStart</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>onBootPhase</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>setDockStateLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.power</package>
      <class>PowerManagerService</class>
      <method>updateIsPoweredLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>access$900</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.DockObserver</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>setActualDockStateLocked</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>access$400</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.server.DockObserver</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver</class>
      <method>init</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>DockObserver$2</class>
      <method>onUEvent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.UEventObserver$UEvent</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.RECORD_AUDIO">
    <call>
      <package>android.media</package>
      <class>AudioRecord</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaRecorder</class>
      <method>setAudioSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>updateMediaRecorderParams</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>startRecording</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>process</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>process</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>CallbackFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameBranch</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameFetch</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameStore</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureTarget</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>InputStreamSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>NullFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>ObjectSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>OutputStreamTarget</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>RetargetFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AlphaBlendFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AutoFixFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapOverlayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlackWhiteFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlendFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BrightnessFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ColorTemperatureFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ContrastFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropRectFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CrossProcessFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DocumentaryFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawOverlayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawRectFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DuotoneFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FillLightFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FisheyeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FixedRotationFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FlipFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>GrainFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageCombineFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageEncoder</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageSlicer</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageStitcher</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>Invert</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>LomoishFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>NegativeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>PosterizeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RedEyeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ResizeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RotateFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SaturateFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SepiaFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SharpenFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SimpleImageFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>StraightenFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>TintFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToGrayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToPackedGrayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBAFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>VignetteFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringLogger</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>ToUpperCase</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videoproc</package>
      <class>BackDropperFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>CallbackFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameBranch</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameFetch</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameStore</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureTarget</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>InputStreamSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>NullFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>ObjectSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>OutputStreamTarget</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>RetargetFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AlphaBlendFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AutoFixFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapOverlayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlackWhiteFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlendFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BrightnessFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ColorTemperatureFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ContrastFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropRectFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CrossProcessFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DocumentaryFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawOverlayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawRectFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DuotoneFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FillLightFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FisheyeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FixedRotationFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FlipFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>GrainFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageCombineFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageEncoder</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageSlicer</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageStitcher</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>Invert</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>LomoishFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>NegativeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>PosterizeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RedEyeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ResizeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RotateFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SaturateFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SepiaFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SharpenFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SimpleImageFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>StraightenFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>TintFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToGrayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToPackedGrayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBAFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>VignetteFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.numeric</package>
      <class>SinWaveFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.performance</package>
      <class>ThroughputFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringLogger</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>ToUpperCase</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceRenderFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceTargetFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videoproc</package>
      <class>BackDropperFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>CameraSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>MediaSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureTarget</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>FilterFunction</class>
      <method>execute</method>
      <returnType>Frame</returnType>
      <parameters>
        <parameter>android.filterfw.core.KeyValueMap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>processFilterNode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.Filter</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>CallbackFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameBranch</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameFetch</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameStore</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureTarget</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>InputStreamSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>NullFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>ObjectSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>OutputStreamTarget</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>RetargetFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AlphaBlendFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AutoFixFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapOverlayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlackWhiteFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlendFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BrightnessFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ColorTemperatureFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ContrastFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropRectFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CrossProcessFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DocumentaryFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawOverlayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawRectFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DuotoneFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FillLightFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FisheyeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FixedRotationFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FlipFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>GrainFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageCombineFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageEncoder</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageSlicer</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageStitcher</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>Invert</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>LomoishFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>NegativeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>PosterizeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RedEyeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ResizeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RotateFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SaturateFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SepiaFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SharpenFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SimpleImageFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>StraightenFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>TintFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToGrayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToPackedGrayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBAFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>VignetteFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.numeric</package>
      <class>SinWaveFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.performance</package>
      <class>ThroughputFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringLogger</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>ToUpperCase</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceRenderFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceTargetFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videoproc</package>
      <class>BackDropperFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>CameraSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>MediaSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureTarget</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>FilterFunction</class>
      <method>executeWithArgList</method>
      <returnType>Frame</returnType>
      <parameters>
        <parameter>java.lang.Object[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>performStep</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media.effect</package>
      <class>SingleFilterEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect</package>
      <class>SizeChangeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>AsyncRunner$AsyncRunnerTask</class>
      <method>doInBackground</method>
      <returnType>AsyncRunner$RunnerResult</returnType>
      <parameters>
        <parameter>android.filterfw.core.SyncRunner[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>step</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>AutoFixEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BitmapOverlayEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BlackWhiteEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BrightnessEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>ColorTemperatureEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>ContrastEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>CrossProcessEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>DocumentaryEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>DuotoneEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>FillLightEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>FisheyeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>FlipEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>GrainEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>GrayscaleEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>LomoishEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>NegativeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>PosterizeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>RedEyeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>SaturateEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>SepiaEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>SharpenEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>StraightenEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>TintEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>VignetteEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>CropEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>RotateEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>AsyncRunner$AsyncRunnerTask</class>
      <method>doInBackground</method>
      <returnType>Object</returnType>
      <parameters>
        <parameter>java.lang.Object[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>GraphRunner</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media.effect</package>
      <class>FilterGraphEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BackDropperEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.MODIFY_AUDIO_SETTINGS">
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>isBluetoothA2dpOn</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>sendAccessibilityEventForUnicodeCharacter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>showPreview</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>sendAccessibilityEventForUnicodeCharacter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>onModifiedTouchEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>openPopupIfRequired</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>setKeyboard</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.inputmethodservice.Keyboard</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>showPreview</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>onTouchEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>onModifiedTouchEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>access$400</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.inputmethodservice.KeyboardView</parameter>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>openPopupIfRequired</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>onLongPress</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.inputmethodservice.Keyboard$Key</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardHelper</class>
      <method>handleModeChange</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardHelper</class>
      <method>handleShift</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardHelper</class>
      <method>setKeyboardMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>setKeyboard</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.inputmethodservice.Keyboard</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>onHoverEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>onTouchEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>access$400</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.inputmethodservice.KeyboardView</parameter>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>onLongPress</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.inputmethodservice.Keyboard$Key</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardHelper</class>
      <method>onKey</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.widget</package>
      <class>PasswordEntryKeyboardView</class>
      <method>onHoverEvent</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.view.MotionEvent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>isWiredHeadsetOn</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setMicrophoneMute</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.devicepolicy</package>
      <class>DevicePolicyManagerService</class>
      <method>clearUserRestrictions</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.UserHandle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setParameter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setParameters</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.server</package>
      <class>BluetoothA2dpService</class>
      <method>checkSinkSuspendState</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.server</package>
      <class>BluetoothA2dpService</class>
      <method>handleSinkStateChange</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.bluetooth.BluetoothDevice</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.server</package>
      <class>BluetoothA2dpService</class>
      <method>onBluetoothEnable</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.server</package>
      <class>BluetoothA2dpService</class>
      <method>onBluetoothDisable</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.server</package>
      <class>BluetoothA2dpService</class>
      <method>resumeSink</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.bluetooth.BluetoothDevice</parameter>
      </parameters>
    </call>
    <call>
      <package>android.server</package>
      <class>BluetoothA2dpService</class>
      <method>suspendSink</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.bluetooth.BluetoothDevice</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.WRITE_SMS">
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>deleteFromRawTable</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>deleteFromRawTable</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>deleteFromRawTable</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler$SmsBroadcastReceiver</class>
      <method>onReceive</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SMSDispatcher</class>
      <method>writeOutboxMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaSMSDispatcher</class>
      <method>writeOutboxMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmSMSDispatcher</class>
      <method>writeOutboxMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ImsSMSDispatcher</class>
      <method>writeOutboxMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SMSDispatcher</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaSMSDispatcher</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmSMSDispatcher</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaSMSDispatcher</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmSMSDispatcher</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IccSmsInterfaceManager</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IccSmsInterfaceManager</class>
      <method>sendStoredMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ImsSMSDispatcher</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SMSDispatcher</class>
      <method>sendMultipartSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SMSDispatcher$SmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SMSDispatcher</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>UiccSmsController</class>
      <method>sendMultipartTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>UiccSmsController</class>
      <method>sendStoredMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaSMSDispatcher</class>
      <method>sendMultipartSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SMSDispatcher$SmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmSMSDispatcher</class>
      <method>sendMultipartSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SMSDispatcher$SmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ImsSMSDispatcher</class>
      <method>sendMultipartSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SMSDispatcher$SmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IccSmsInterfaceManager</class>
      <method>sendStoredText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IccSmsInterfaceManager</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ImsSMSDispatcher</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub$Proxy</class>
      <method>sendMultipartTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub</class>
      <method>sendMultipartTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>UiccSmsController</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub$Proxy</class>
      <method>sendStoredMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub</class>
      <method>sendStoredMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>UiccSmsController</class>
      <method>sendStoredText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>UiccSmsController</class>
      <method>sendTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms</class>
      <method>sendMultipartTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub$Proxy</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms</class>
      <method>sendStoredMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub$Proxy</class>
      <method>sendStoredText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub</class>
      <method>sendStoredText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub$Proxy</class>
      <method>sendTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub</class>
      <method>sendTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>UiccSmsController</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>UiccSmsController</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms</class>
      <method>sendMultipartText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
        <parameter>java.util.List</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendStoredMultipartTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms</class>
      <method>sendStoredText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms</class>
      <method>sendTextForSubscriber</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub$Proxy</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms$Stub</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendMultipartTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendStoredTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>ISms</class>
      <method>sendText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendMultipartTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>writeInboxMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>writeInboxMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>writeInboxMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>access$900</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsHandler</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>access$900</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsHandler</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>access$900</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsHandler</parameter>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsBroadcastUndelivered</class>
      <method>scanRawTable</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsBroadcastUndelivered</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$900</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$800</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Inbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Sent</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Outbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$1000</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Outbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Inbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>addTrackerToRawTable</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>addTrackerToRawTable</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>addTrackerToRawTable</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>addTrackerToRawTableAndSendMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>addTrackerToRawTableAndSendMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>addTrackerToRawTableAndSendMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>dispatchNormalMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>processCdmaWapPdu</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>byte[]</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>dispatchNormalMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>dispatchNormalMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>dispatchMessageRadioSpecific</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>dispatchMessageRadioSpecific</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>dispatchMessageRadioSpecific</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>dispatchMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>dispatchMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>dispatchMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>handleInjectSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>handleNewSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>handleInjectSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>handleInjectSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler$DeliveringState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>handleNewSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>handleNewSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.util</package>
      <class>State</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.util</package>
      <class>IState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.util</package>
      <class>StateMachine$SmHandler</class>
      <method>processMsg</method>
      <returnType>State</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$DisconnectedState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$DormantState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$InactiveState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$ScanState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$UninitializedState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$FullHighPerfLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$FullLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$NoLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$ScanOnlyLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiWatchdogStateMachine$NotConnectedState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Draft</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$1100</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>PduCache</class>
      <method>normalizeKey</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>PduCache</class>
      <method>put</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>com.google.android.mms.util.PduCacheEntry</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.pdu</package>
      <class>PduPersister</class>
      <method>load</method>
      <returnType>GenericPdu</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>PduCache</class>
      <method>put</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.Object</parameter>
        <parameter>java.lang.Object</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>AbstractCache</class>
      <method>put</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.Object</parameter>
        <parameter>java.lang.Object</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Draft</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Sent</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.CAMERA">
    <call>
      <package>android.hardware</package>
      <class>Camera</class>
      <method>open</method>
      <returnType>Camera</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.hardware</package>
      <class>Camera</class>
      <method>native_setup</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.Object</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaRecorder</class>
      <method>setVideoSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>updateMediaRecorderParams</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>startRecording</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>process</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>process</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>CallbackFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameBranch</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameFetch</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameStore</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureTarget</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>InputStreamSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>NullFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>ObjectSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>OutputStreamTarget</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>RetargetFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AlphaBlendFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AutoFixFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapOverlayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlackWhiteFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlendFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BrightnessFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ColorTemperatureFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ContrastFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropRectFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CrossProcessFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DocumentaryFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawOverlayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawRectFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DuotoneFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FillLightFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FisheyeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FixedRotationFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FlipFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>GrainFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageCombineFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageEncoder</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageSlicer</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageStitcher</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>Invert</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>LomoishFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>NegativeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>PosterizeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RedEyeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ResizeFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RotateFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SaturateFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SepiaFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SharpenFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SimpleImageFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>StraightenFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>TintFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToGrayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToPackedGrayFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBAFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>VignetteFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringLogger</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringSource</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>ToUpperCase</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videoproc</package>
      <class>BackDropperFilter</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>Filter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>CallbackFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameBranch</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameFetch</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameStore</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureTarget</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>InputStreamSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>NullFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>ObjectSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>OutputStreamTarget</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>RetargetFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AlphaBlendFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AutoFixFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapOverlayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlackWhiteFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlendFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BrightnessFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ColorTemperatureFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ContrastFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropRectFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CrossProcessFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DocumentaryFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawOverlayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawRectFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DuotoneFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FillLightFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FisheyeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FixedRotationFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FlipFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>GrainFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageCombineFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageEncoder</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageSlicer</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageStitcher</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>Invert</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>LomoishFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>NegativeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>PosterizeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RedEyeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ResizeFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RotateFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SaturateFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SepiaFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SharpenFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SimpleImageFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>StraightenFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>TintFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToGrayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToPackedGrayFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBAFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>VignetteFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.numeric</package>
      <class>SinWaveFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.performance</package>
      <class>ThroughputFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringLogger</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>ToUpperCase</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceRenderFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceTargetFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videoproc</package>
      <class>BackDropperFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>CameraSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>MediaSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureSource</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureTarget</class>
      <method>performOpen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>FilterFunction</class>
      <method>execute</method>
      <returnType>Frame</returnType>
      <parameters>
        <parameter>android.filterfw.core.KeyValueMap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>processFilterNode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.Filter</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>CallbackFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameBranch</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameFetch</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>FrameStore</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>GLTextureTarget</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>InputStreamSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>NullFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>ObjectSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>OutputStreamTarget</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.base</package>
      <class>RetargetFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AlphaBlendFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>AutoFixFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapOverlayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BitmapSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlackWhiteFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BlendFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>BrightnessFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ColorTemperatureFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ContrastFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CropRectFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>CrossProcessFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DocumentaryFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawOverlayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DrawRectFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>DuotoneFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FillLightFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FisheyeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FixedRotationFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>FlipFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>GrainFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageCombineFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageEncoder</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageSlicer</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ImageStitcher</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>Invert</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>LomoishFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>NegativeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>PosterizeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RedEyeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ResizeFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>RotateFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SaturateFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SepiaFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SharpenFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>SimpleImageFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>StraightenFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>TintFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToGrayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToPackedGrayFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBAFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>ToRGBFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.imageproc</package>
      <class>VignetteFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.numeric</package>
      <class>SinWaveFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.performance</package>
      <class>ThroughputFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringLogger</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>StringSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.text</package>
      <class>ToUpperCase</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceRenderFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.ui</package>
      <class>SurfaceTargetFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videoproc</package>
      <class>BackDropperFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosink</package>
      <class>MediaEncoderFilter</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>CameraSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>MediaSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureSource</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterpacks.videosrc</package>
      <class>SurfaceTextureTarget</class>
      <method>performProcess</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.filterfw.core.FilterContext</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>FilterFunction</class>
      <method>executeWithArgList</method>
      <returnType>Frame</returnType>
      <parameters>
        <parameter>java.lang.Object[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>performStep</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media.effect</package>
      <class>SingleFilterEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect</package>
      <class>SizeChangeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>AsyncRunner$AsyncRunnerTask</class>
      <method>doInBackground</method>
      <returnType>AsyncRunner$RunnerResult</returnType>
      <parameters>
        <parameter>android.filterfw.core.SyncRunner[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>step</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>SyncRunner</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>AutoFixEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BitmapOverlayEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BlackWhiteEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BrightnessEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>ColorTemperatureEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>ContrastEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>CrossProcessEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>DocumentaryEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>DuotoneEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>FillLightEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>FisheyeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>FlipEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>GrainEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>GrayscaleEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>LomoishEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>NegativeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>PosterizeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>RedEyeEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>SaturateEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>SepiaEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>SharpenEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>StraightenEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>TintEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>VignetteEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>CropEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>RotateEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>AsyncRunner$AsyncRunnerTask</class>
      <method>doInBackground</method>
      <returnType>Object</returnType>
      <parameters>
        <parameter>java.lang.Object[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.filterfw.core</package>
      <class>GraphRunner</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media.effect</package>
      <class>FilterGraphEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media.effect.effects</package>
      <class>BackDropperEffect</class>
      <method>apply</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_CALENDAR">
    <call>
      <package>android.provider</package>
      <class>CalendarContract$EventDays</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$EventsEntity$EntityIteratorImpl</class>
      <method>getEntityAndIncrementCursor</method>
      <returnType>Entity</returnType>
      <parameters>
        <parameter>android.database.Cursor</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>CursorEntityIterator</class>
      <method>getEntityAndIncrementCursor</method>
      <returnType>Entity</returnType>
      <parameters>
        <parameter>android.database.Cursor</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>CursorEntityIterator</class>
      <method>next</method>
      <returnType>Entity</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content</package>
      <class>CursorEntityIterator</class>
      <method>next</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$CalendarEntity$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Entity</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$EventsEntity$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Entity</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Groups$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Entity</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$RawContacts$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Entity</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$CalendarEntity$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$EventsEntity$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Groups$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$RawContacts$EntityIteratorImpl</class>
      <method>next</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$Instances</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$Instances</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$CalendarAlerts</class>
      <method>findNextAlarmTime</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$Attendees</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$CalendarAlerts</class>
      <method>alarmExists</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$CalendarAlerts</class>
      <method>rescheduleMissedAlarms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.content.Context</parameter>
        <parameter>android.app.AlarmManager</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>CalendarContract$Reminders</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.calendar</package>
      <class>AgendaWindowAdapter</class>
      <method>buildQueryUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_SMS">
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Inbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Sent</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Outbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>WapPushOverSms</class>
      <method>getDeliveryOrReadReportThreadId</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.google.android.mms.pdu.GenericPdu</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>WapPushOverSms</class>
      <method>writeInboxMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>WapPushOverSms</class>
      <method>dispatchWapPdu</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>byte[]</parameter>
        <parameter>android.content.BroadcastReceiver</parameter>
        <parameter>com.android.internal.telephony.InboundSmsHandler</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>processMessagePart</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>processMessagePart</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>processMessagePart</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler$DeliveringState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.util</package>
      <class>State</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.util</package>
      <class>IState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.util</package>
      <class>StateMachine$SmHandler</class>
      <method>processMsg</method>
      <returnType>State</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$DisconnectedState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$DormantState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$InactiveState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$ScanState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>SupplicantStateTracker$UninitializedState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$FullHighPerfLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$FullLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$NoLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiController$ScanOnlyLockHeldState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server.wifi</package>
      <class>WifiWatchdogStateMachine$NotConnectedState</class>
      <method>processMessage</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$800</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>importTextMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>onTransact</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>android.os.Parcel</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsBroadcastUndelivered</class>
      <method>scanRawTable</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>SmsBroadcastUndelivered</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$900</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>importMultimediaMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>WapPushOverSms</class>
      <method>isDuplicateNotification</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>com.google.android.mms.pdu.NotificationInd</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.pdu</package>
      <class>PduPersister</class>
      <method>getPendingMessages</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Draft</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Sent</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$1100</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>addMultimediaMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>PduCache</class>
      <method>normalizeKey</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>PduCache</class>
      <method>put</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>com.google.android.mms.util.PduCacheEntry</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.pdu</package>
      <class>PduPersister</class>
      <method>load</method>
      <returnType>GenericPdu</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>PduCache</class>
      <method>put</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.Object</parameter>
        <parameter>java.lang.Object</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.util</package>
      <class>AbstractCache</class>
      <method>put</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.Object</parameter>
        <parameter>java.lang.Object</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Mms</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>addTrackerToRawTable</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>addTrackerToRawTable</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>addTrackerToRawTable</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>addTrackerToRawTableAndSendMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>addTrackerToRawTableAndSendMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>addTrackerToRawTableAndSendMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.InboundSmsTracker</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>dispatchNormalMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>processCdmaWapPdu</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>byte[]</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>dispatchNormalMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>dispatchNormalMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>dispatchMessageRadioSpecific</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>dispatchMessageRadioSpecific</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>dispatchMessageRadioSpecific</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>dispatchMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>dispatchMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>dispatchMessage</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>com.android.internal.telephony.SmsMessageBase</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>handleInjectSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>InboundSmsHandler</class>
      <method>handleNewSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>handleInjectSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>handleInjectSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.cdma</package>
      <class>CdmaInboundSmsHandler</class>
      <method>handleNewSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony.gsm</package>
      <class>GsmInboundSmsHandler</class>
      <method>handleNewSms</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.AsyncResult</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Inbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Draft</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Threads</class>
      <method>getOrCreateThreadId</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.util.Set</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Threads</class>
      <method>getOrCreateThreadId</method>
      <returnType>long</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.pdu</package>
      <class>PduPersister</class>
      <method>persist</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>com.google.android.mms.pdu.GenericPdu</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>java.util.HashMap</parameter>
      </parameters>
    </call>
    <call>
      <package>com.google.android.mms.pdu</package>
      <class>PduPersister</class>
      <method>updateHeaders</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>com.google.android.mms.pdu.SendReq</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker</class>
      <method>access$1000</method>
      <returnType>Uri</returnType>
      <parameters/>
    </call>
    <call>
      <package>com.android.server</package>
      <class>MmsServiceBroker$BinderService</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub$Proxy</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms$Stub</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>com.android.internal.telephony</package>
      <class>IMms</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>addTextMessageDraft</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Sms$Outbox</class>
      <method>addMessage</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Long</parameter>
        <parameter>boolean</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Telephony$Mms</class>
      <method>query</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String[]</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.BLUETOOTH">
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothSocket</class>
      <method>initSocketFromFdNative</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothSocket</class>
      <method>initSocketNative</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="com.android.browser.permission.READ_HISTORY_BOOKMARKS">
    <call>
      <package>android.provider</package>
      <class>BrowserContract$Bookmarks</class>
      <method>buildFolderUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>BrowserContract$Settings</class>
      <method>isSyncEnabled</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>canClearHistory</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getAllVisitedUrls</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>truncateHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>updateVisitedHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getAllBookmarks</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getVisitedHistory</method>
      <returnType>String[]</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteHistoryWhere</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteHistoryTimeFrame</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getVisitedLike</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="com.android.voicemail.permission.ADD_VOICEMAIL">
    <call>
      <package>android.provider</package>
      <class>VoicemailContract$Status</class>
      <method>buildSourceUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>VoicemailContract$Voicemails</class>
      <method>buildSourceUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
</permissions>
