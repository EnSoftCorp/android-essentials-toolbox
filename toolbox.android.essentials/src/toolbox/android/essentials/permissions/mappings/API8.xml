<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- API level: 8, version: 2.2, code name: Froyo -->
<permissions>
  <permission name="android.permission.CHANGE_WIFI_STATE">
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>reassociate</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>removeNetwork</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>startScan</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>reconnect</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>addNetwork</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.net.wifi.WifiConfiguration</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>pingSupplicant</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>enableNetwork</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>disconnect</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>setWifiEnabled</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>saveConfiguration</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>disableNetwork</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>updateNetwork</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.net.wifi.WifiConfiguration</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_PHONE_STATE">
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getSubscriberId</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getDeviceSoftwareVersion</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>listen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.telephony.PhoneStateListener</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getLine1Number</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getSimSerialNumber</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getVoiceMailAlphaTag</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getVoiceMailNumber</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getDeviceId</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.WRITE_CONTACTS">
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>markAsContacted</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>markAsContacted</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$ContactMethods</class>
      <method>addPostalLocation</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>long</parameter>
        <parameter>double</parameter>
        <parameter>double</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$SyncState</class>
      <method>set</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentProviderClient</parameter>
        <parameter>android.accounts.Account</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$RawContacts</class>
      <method>getContactLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>createPersonInMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.content.ContentValues</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$SyncState</class>
      <method>newSetOperation</method>
      <returnType>ContentProviderOperation</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$Settings</class>
      <method>setSetting</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.GET_TASKS">
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>getRecentTasks</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>getRunningTasks</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.CHANGE_WIFI_MULTICAST_STATE">
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager$MulticastLock</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager$MulticastLock</class>
      <method>acquire</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.ACCESS_WIFI_STATE">
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>getScanResults</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>getDhcpInfo</method>
      <returnType>DhcpInfo</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>isWifiEnabled</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>getConnectionInfo</method>
      <returnType>WifiInfo</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>getWifiState</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager</class>
      <method>getConfiguredNetworks</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.SEND_SMS">
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendMultipartTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendDataMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>short</parameter>
        <parameter>byte[]</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendMultipartTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendDataMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>short</parameter>
        <parameter>byte[]</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.ACCESS_MOCK_LOCATION">
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>clearTestProviderLocation</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>clearTestProviderEnabled</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>addTestProvider</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>setTestProviderLocation</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.location.Location</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>removeTestProvider</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>setTestProviderEnabled</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>clearTestProviderStatus</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>setTestProviderStatus</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_LOGS">
    <call>
      <package>android.os</package>
      <class>DropBoxManager</class>
      <method>getNextEntry</method>
      <returnType>DropBoxManager$Entry</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.BLUETOOTH_ADMIN">
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>enable</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>startBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>stopBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>setName</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>startDiscovery</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>disable</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>cancelDiscovery</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.VIBRATE">
    <call>
      <package>android.app</package>
      <class>NotificationManager</class>
      <method>notify</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>android.app.Notification</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>NotificationManager</class>
      <method>notify</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>android.app.Notification</parameter>
      </parameters>
    </call>
    <call>
      <package>android.os</package>
      <class>Vibrator</class>
      <method>vibrate</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long[]</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.os</package>
      <class>Vibrator</class>
      <method>cancel</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.os</package>
      <class>Vibrator</class>
      <method>vibrate</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.MODIFY_AUDIO_SETTINGS">
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>isWiredHeadsetOn</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>startBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setSpeakerphoneOn</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setBluetoothScoOn</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>stopBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setParameters</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>isBluetoothA2dpOn</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setMicrophoneMute</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.RESTART_PACKAGES">
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>restartPackage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>killBackgroundProcesses</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.ACCESS_COARSE_LOCATION">
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getNeighboringCellInfo</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getCellLocation</method>
      <returnType>CellLocation</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>listen</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.telephony.PhoneStateListener</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getProviders</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>android.location.Criteria</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getProviders</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getProvider</method>
      <returnType>LocationProvider</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>requestLocationUpdates</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>float</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>sendExtraCommand</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getLastKnownLocation</method>
      <returnType>Location</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>requestLocationUpdates</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>float</parameter>
        <parameter>android.location.LocationListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>isProviderEnabled</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>addProximityAlert</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>double</parameter>
        <parameter>double</parameter>
        <parameter>float</parameter>
        <parameter>long</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getBestProvider</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.location.Criteria</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>requestLocationUpdates</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>float</parameter>
        <parameter>android.location.LocationListener</parameter>
        <parameter>android.os.Looper</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.CHANGE_NETWORK_STATE">
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>setNetworkPreference</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>stopUsingNetworkFeature</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>startUsingNetworkFeature</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>requestRouteToHost</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="com.android.browser.permission.READ_HISTORY_BOOKMARKS">
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteFromHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getAllVisitedUrls</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>updateVisitedHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>truncateHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>requestAllIcons</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.webkit.WebIconDatabase$IconListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearSearches</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getAllBookmarks</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>removeAllIcons</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteHistoryTimeFrame</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>addSearchUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>canClearHistory</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>releaseIconForPageUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>close</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>requestIconForPageUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.webkit.WebIconDatabase$IconListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>retainIconForPageUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_USER_DICTIONARY">
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>swipeDown</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.PERSISTENT_ACTIVITY">
    <call>
      <package>android.app</package>
      <class>Activity</class>
      <method>setPersistent</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.WRITE_SETTINGS">
    <call>
      <package>android.media</package>
      <class>RingtoneManager</class>
      <method>setActualDefaultRingtoneUri</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>int</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Secure</class>
      <method>putFloat</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>getUriFor</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>putInt</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Secure</class>
      <method>putString</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>setShowGTalkServiceStatus</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Secure</class>
      <method>putLong</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>putLong</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Secure</class>
      <method>getUriFor</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>putFloat</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>float</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>putString</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>setNetworkPreference</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$System</class>
      <method>putConfiguration</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.content.res.Configuration</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Secure</class>
      <method>putInt</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Settings$Secure</class>
      <method>setLocationProviderEnabled</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.CAMERA">
    <call>
      <package>android.media</package>
      <class>MediaRecorder</class>
      <method>setVideoSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.hardware</package>
      <class>Camera</class>
      <method>open</method>
      <returnType>Camera</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.WRITE_USER_DICTIONARY">
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>swipeDown</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.AUTHENTICATE_ACCOUNTS">
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>setUserData</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>setPassword</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getPassword</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>addAccountExplicitly</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>peekAuthToken</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getUserData</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>setAuthToken</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.MODIFY_PHONE_STATE">
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>setNetworkPreference</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>stopUsingNetworkFeature</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>startUsingNetworkFeature</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.INTERNET">
    <call>
      <package>android.webkit</package>
      <class>WebSettings</class>
      <method>setBlockNetworkLoads</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>ServerSocket</class>
      <method>bind</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.net.SocketAddress</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>URL</class>
      <method>openStream</method>
      <returnType>InputStream</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>URL</class>
      <method>openConnection</method>
      <returnType>URLConnection</returnType>
      <parameters/>
    </call>
    <call>
      <package>java.net</package>
      <class>Socket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>MulticastSocket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>URL</class>
      <method>getContent</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>java.net</package>
      <class>URLConnection</class>
      <method>getInputStream</method>
      <returnType>InputStream</returnType>
      <parameters/>
    </call>
    <call>
      <package>java.net</package>
      <class>HttpURLConnection</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>ServerSocket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>org.apache.http.impl.client</package>
      <class>DefaultHttpClient</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>DatagramSocket</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
        <parameter>int</parameter>
        <parameter>java.util.Map</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
      </parameters>
    </call>
    <call>
      <package>java.net</package>
      <class>URLConnection</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.SET_WALLPAPER">
    <call>
      <package>android.content</package>
      <class>ContextWrapper</class>
      <method>setWallpaper</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.graphics.Bitmap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>WallpaperManager</class>
      <method>setBitmap</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.graphics.Bitmap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContextWrapper</class>
      <method>clearWallpaper</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>WallpaperManager</class>
      <method>setStream</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.InputStream</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>WallpaperManager</class>
      <method>clear</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content</package>
      <class>Context</class>
      <method>setWallpaper</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.graphics.Bitmap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>Context</class>
      <method>setWallpaper</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.InputStream</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>Context</class>
      <method>clearWallpaper</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content</package>
      <class>ContextWrapper</class>
      <method>setWallpaper</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.io.InputStream</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>WallpaperManager</class>
      <method>setResource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="com.android.browser.permission.WRITE_HISTORY_BOOKMARKS">
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>truncateHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteFromHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>addSearchUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearSearches</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>updateVisitedHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteHistoryTimeFrame</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.DISABLE_KEYGUARD">
    <call>
      <package>android.app</package>
      <class>KeyguardManager$KeyguardLock</class>
      <method>reenableKeyguard</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>KeyguardManager$KeyguardLock</class>
      <method>disableKeyguard</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>KeyguardManager</class>
      <method>exitKeyguardSecurely</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.app.KeyguardManager$OnKeyguardExitResult</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.ACCESS_NETWORK_STATE">
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteFromHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getAllVisitedUrls</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadDataWithBaseURL</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goForward</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>pauseTimers</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>getNetworkInfo</method>
      <returnType>NetworkInfo</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>updateVisitedHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>truncateHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.Map</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>startUsingNetworkFeature</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>reload</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>removeAllIcons</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>stopLoading</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>deleteHistoryTimeFrame</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goBackOrForward</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>documentHasImages</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>addSearchUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>freeMemory</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>canClearHistory</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>zoomOut</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>HttpAuthHandler</class>
      <method>cancel</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearView</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearCache</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadData</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>clearHistory</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>enablePlatformNotifications</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>destroy</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>restoreState</method>
      <returnType>WebBackForwardList</returnType>
      <parameters>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewClient</class>
      <method>onReceivedHttpAuthRequest</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.webkit.WebView</parameter>
        <parameter>android.webkit.HttpAuthHandler</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>HttpAuthHandler</class>
      <method>proceed</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goBack</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearHistory</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>invokeZoomPicker</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>setNetworkAvailable</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>getNetworkPreference</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>postUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>zoomIn</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearSslPreferences</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>requestAllIcons</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.webkit.WebIconDatabase$IconListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebSettings</class>
      <method>setDefaultZoom</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.webkit.WebSettings$ZoomDensity</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Browser</class>
      <method>getAllBookmarks</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goBackOrForward</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>addJavascriptInterface</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.Object</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>requestFocusNodeHref</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>resumeTimers</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>releaseIconForPageUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>requestIconForPageUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.webkit.WebIconDatabase$IconListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>close</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>retainIconForPageUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebIconDatabase</class>
      <method>open</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>getActiveNetworkInfo</method>
      <returnType>NetworkInfo</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net</package>
      <class>ConnectivityManager</class>
      <method>getAllNetworkInfo</method>
      <returnType>NetworkInfo[]</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>debugDump</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.GET_ACCOUNTS">
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>editProperties</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>confirmCredentials</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>removeAccount</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthToken</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAccountsByType</method>
      <returnType>Account[]</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthTokenByFeatures</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>addAccount</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthToken</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>updateCredentials</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAccounts</method>
      <returnType>Account[]</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAccountsByTypeAndFeatures</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>blockingGetAuthToken</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>addOnAccountsUpdatedListener</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.OnAccountsUpdateListener</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>hasFeatures</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>KeyguardManager</class>
      <method>exitKeyguardSecurely</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.app.KeyguardManager$OnKeyguardExitResult</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_SYNC_STATS">
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>getCurrentSync</method>
      <returnType>SyncInfo</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.test</package>
      <class>SyncBaseInstrumentation</class>
      <method>syncProvider</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>isSyncPending</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>isSyncActive</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.ACCESS_FINE_LOCATION">
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getNeighboringCellInfo</method>
      <returnType>List</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>TelephonyManager</class>
      <method>getCellLocation</method>
      <returnType>CellLocation</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getProviders</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>android.location.Criteria</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getProviders</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getProvider</method>
      <returnType>LocationProvider</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>requestLocationUpdates</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>float</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>sendExtraCommand</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>addNmeaListener</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.location.GpsStatus$NmeaListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getLastKnownLocation</method>
      <returnType>Location</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>addGpsStatusListener</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.location.GpsStatus$Listener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>isProviderEnabled</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>addProximityAlert</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>double</parameter>
        <parameter>double</parameter>
        <parameter>float</parameter>
        <parameter>long</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>requestLocationUpdates</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>float</parameter>
        <parameter>android.location.LocationListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>getBestProvider</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.location.Criteria</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>requestLocationUpdates</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>long</parameter>
        <parameter>float</parameter>
        <parameter>android.location.LocationListener</parameter>
        <parameter>android.os.Looper</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.USE_CREDENTIALS">
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>editProperties</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>confirmCredentials</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthToken</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthTokenByFeatures</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>addAccount</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthToken</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>updateCredentials</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>invalidateAuthToken</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>blockingGetAuthToken</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>KeyguardManager</class>
      <method>exitKeyguardSecurely</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.app.KeyguardManager$OnKeyguardExitResult</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.SET_TIME_ZONE">
    <call>
      <package>android.app</package>
      <class>AlarmManager</class>
      <method>setTimeZone</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.WAKE_LOCK">
    <call>
      <package>android.media</package>
      <class>AsyncPlayer</class>
      <method>stop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>startBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>resume</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>RingtoneManager</class>
      <method>stopPreviousRingtone</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>setVideoURI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
        <parameter>java.util.Map</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>RingtoneManager</class>
      <method>getRingtone</method>
      <returnType>Ringtone</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>stop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>TextToSpeech</class>
      <method>speak</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.util.HashMap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>TextToSpeech</class>
      <method>synthesizeToFile</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.HashMap</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>AsyncPlayer</class>
      <method>play</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.net.Uri</parameter>
        <parameter>boolean</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.os</package>
      <class>PowerManager$WakeLock</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>setVideoPath</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>stopPlayback</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>start</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>TextToSpeech</class>
      <method>playSilence</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>int</parameter>
        <parameter>java.util.HashMap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>TextToSpeech</class>
      <method>playEarcon</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.util.HashMap</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendMultipartTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>suspend</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>pause</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>Ringtone</class>
      <method>stop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.os</package>
      <class>PowerManager$WakeLock</class>
      <method>acquire</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendMultipartTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
        <parameter>java.util.ArrayList</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>setWakeMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendDataMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>short</parameter>
        <parameter>byte[]</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupManager</class>
      <method>requestRestore</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.app.backup.RestoreObserver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.os</package>
      <class>PowerManager$WakeLock</class>
      <method>acquire</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony</package>
      <class>SmsManager</class>
      <method>sendTextMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager$WifiLock</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net.wifi</package>
      <class>WifiManager$WifiLock</class>
      <method>acquire</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app</package>
      <class>KeyguardManager</class>
      <method>exitKeyguardSecurely</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.app.KeyguardManager$OnKeyguardExitResult</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>start</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>pause</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>VideoView</class>
      <method>setVideoURI</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech.tts</package>
      <class>TextToSpeech</class>
      <method>stop</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>Ringtone</class>
      <method>play</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.os</package>
      <class>Vibrator</class>
      <method>vibrate</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>reset</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>stopBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.os</package>
      <class>PowerManager$WakeLock</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.telephony.gsm</package>
      <class>SmsManager</class>
      <method>sendDataMessage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>short</parameter>
        <parameter>byte[]</parameter>
        <parameter>android.app.PendingIntent</parameter>
        <parameter>android.app.PendingIntent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaPlayer</class>
      <method>release</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.READ_CONTACTS">
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>markAsContacted</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$ContactMethods</class>
      <method>addPostalLocation</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>long</parameter>
        <parameter>double</parameter>
        <parameter>double</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>assignContactFromPhone</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>queryGroups</method>
      <returnType>Cursor</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$SyncState</class>
      <method>set</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentProviderClient</parameter>
        <parameter>android.accounts.Account</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$RawContacts</class>
      <method>getContactLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>createPersonInMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.content.ContentValues</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToMyContactsGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$Settings</class>
      <method>setSetting</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$SyncState</class>
      <method>newSetOperation</method>
      <returnType>ContentProviderOperation</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$SyncState</class>
      <method>getWithUri</method>
      <returnType>Pair</returnType>
      <parameters>
        <parameter>android.content.ContentProviderClient</parameter>
        <parameter>android.accounts.Account</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>android.net.Uri</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>markAsContacted</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>onClick</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.view.View</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$SyncState</class>
      <method>get</method>
      <returnType>byte[]</returnType>
      <parameters>
        <parameter>android.content.ContentProviderClient</parameter>
        <parameter>android.accounts.Account</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>assignContactFromEmail</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>ContactsContract$Contacts</class>
      <method>getLookupUri</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>long</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$Settings</class>
      <method>getSetting</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.provider</package>
      <class>Contacts$People</class>
      <method>addToGroup</method>
      <returnType>Uri</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
        <parameter>long</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.SET_WALLPAPER_HINTS">
    <call>
      <package>android.app</package>
      <class>WallpaperManager</class>
      <method>suggestDesiredDimensions</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.READ_SYNC_SETTINGS">
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>getMasterSyncAutomatically</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>getPeriodicSyncs</method>
      <returnType>List</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>getSyncAutomatically</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>getIsSyncable</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.MANAGE_ACCOUNTS">
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>editProperties</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>confirmCredentials</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>removeAccount</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>clearPassword</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthToken</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthTokenByFeatures</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>addAccount</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAuthToken</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>updateCredentials</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>android.app.Activity</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>invalidateAuthToken</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>getAccountsByTypeAndFeatures</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>hasFeatures</method>
      <returnType>AccountManagerFuture</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String[]</parameter>
        <parameter>android.accounts.AccountManagerCallback</parameter>
        <parameter>android.os.Handler</parameter>
      </parameters>
    </call>
    <call>
      <package>android.accounts</package>
      <class>AccountManager</class>
      <method>blockingGetAuthToken</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>KeyguardManager</class>
      <method>exitKeyguardSecurely</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.app.KeyguardManager$OnKeyguardExitResult</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.WRITE_SYNC_SETTINGS">
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>setMasterSyncAutomatically</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.test</package>
      <class>SyncBaseInstrumentation</class>
      <method>cancelSyncsandDisableAutoSync</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>addPeriodicSync</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
        <parameter>long</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>removePeriodicSync</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>setSyncAutomatically</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContentResolver</class>
      <method>setIsSyncable</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.accounts.Account</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.BROADCAST_STICKY">
    <call>
      <package>android.content</package>
      <class>ContextWrapper</class>
      <method>removeStickyBroadcast</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContextWrapper</class>
      <method>sendStickyBroadcast</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>Context</class>
      <method>sendStickyBroadcast</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>ContextWrapper</class>
      <method>sendStickyOrderedBroadcast</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>android.content.BroadcastReceiver</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>Context</class>
      <method>sendStickyOrderedBroadcast</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
        <parameter>android.content.BroadcastReceiver</parameter>
        <parameter>android.os.Handler</parameter>
        <parameter>int</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.content</package>
      <class>Context</class>
      <method>removeStickyBroadcast</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS">
    <call>
      <package>android.location</package>
      <class>LocationManager</class>
      <method>sendExtraCommand</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.RECEIVE_BOOT_COMPLETED">
    <call>
      <package>android.webkit</package>
      <class>WebSyncManager</class>
      <method>run</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadDataWithBaseURL</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>SslErrorHandler</class>
      <method>proceed</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goForward</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>pauseTimers</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>createSocket</method>
      <returnType>Socket</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AbsListView</class>
      <method>onRestoreInstanceState</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Parcelable</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AutoCompleteTextView</class>
      <method>performFiltering</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.util</package>
      <class>Log</class>
      <method>wtf</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Throwable</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>reload</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>documentHasImages</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>freeMemory</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>zoomOut</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>HttpAuthHandler</class>
      <method>cancel</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearView</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>Filter</class>
      <method>filter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
        <parameter>int</parameter>
        <parameter>java.util.Map</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>Filter</class>
      <method>filter</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>android.widget.Filter$FilterListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>createSocket</method>
      <returnType>Socket</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.content</package>
      <class>AsyncQueryHandler</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.ContentResolver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>destroy</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>restoreState</method>
      <returnType>WebBackForwardList</returnType>
      <parameters>
        <parameter>android.os.Bundle</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewClient</class>
      <method>onReceivedHttpAuthRequest</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.webkit.WebView</parameter>
        <parameter>android.webkit.HttpAuthHandler</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>createSocket</method>
      <returnType>Socket</returnType>
      <parameters>
        <parameter>java.net.InetAddress</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goBack</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>createSocket</method>
      <returnType>Socket</returnType>
      <parameters>
        <parameter>java.net.Socket</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>zoomIn</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.app.backup</package>
      <class>BackupManager</class>
      <method>requestRestore</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>android.app.backup.RestoreObserver</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebSettings</class>
      <method>setDefaultZoom</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.webkit.WebSettings$ZoomDensity</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goBackOrForward</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>MultiAutoCompleteTextView</class>
      <method>performFiltering</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebSyncManager</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>SslErrorHandler</class>
      <method>cancel</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>resumeTimers</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>AbsListView</class>
      <method>setFilterText</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>getSupportedCipherSuites</method>
      <returnType>String[]</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>createSocket</method>
      <returnType>Socket</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>int</parameter>
        <parameter>java.net.InetAddress</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.util</package>
      <class>Log</class>
      <method>wtf</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.Throwable</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.Map</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>stopLoading</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>goBackOrForward</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearCache</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>loadData</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
      </parameters>
    </call>
    <call>
      <package>android.util</package>
      <class>EventLog</class>
      <method>getTagCode</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.util</package>
      <class>Log</class>
      <method>wtf</method>
      <returnType>int</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.util</package>
      <class>EventLog$Event</class>
      <method>getData</method>
      <returnType>Object</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>HttpAuthHandler</class>
      <method>proceed</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearHistory</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>invokeZoomPicker</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.widget</package>
      <class>QuickContactBadge</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
        <parameter>android.util.AttributeSet</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>setNetworkAvailable</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>boolean</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>getDefaultCipherSuites</method>
      <returnType>String[]</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.util</package>
      <class>EventLog</class>
      <method>getTagName</method>
      <returnType>String</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>postUrl</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>byte[]</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>clearSslPreferences</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>addJavascriptInterface</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.Object</parameter>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.net</package>
      <class>SSLCertificateSocketFactory</class>
      <method>createSocket</method>
      <returnType>Socket</returnType>
      <parameters>
        <parameter>java.net.InetAddress</parameter>
        <parameter>int</parameter>
        <parameter>java.net.InetAddress</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewClient</class>
      <method>onReceivedSslError</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.webkit.WebView</parameter>
        <parameter>android.webkit.SslErrorHandler</parameter>
        <parameter>android.net.http.SslError</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>requestFocusNodeHref</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.os.Message</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>CookieSyncManager</class>
      <method>createInstance</method>
      <returnType>CookieSyncManager</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>MultiAutoCompleteTextView</class>
      <method>performFiltering</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.widget</package>
      <class>AbsListView</class>
      <method>onTextChanged</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.CharSequence</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.os</package>
      <class>Looper</class>
      <method>loop</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebViewDatabase</class>
      <method>getInstance</method>
      <returnType>WebViewDatabase</returnType>
      <parameters>
        <parameter>android.content.Context</parameter>
      </parameters>
    </call>
    <call>
      <package>android.webkit</package>
      <class>WebView</class>
      <method>debugDump</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.KILL_BACKGROUND_PROCESSES">
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>restartPackage</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.app</package>
      <class>ActivityManager</class>
      <method>killBackgroundProcesses</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
  </permission>
  <permission name="android.permission.BLUETOOTH">
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>setMode</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>getScanMode</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>enable</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothDevice</class>
      <method>getName</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>startBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothDevice</class>
      <method>getBluetoothClass</method>
      <returnType>BluetoothClass</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothDevice</class>
      <method>getBondState</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>getAddress</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>getBondedDevices</method>
      <returnType>Set</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>listenUsingRfcommWithServiceRecord</method>
      <returnType>BluetoothServerSocket</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
        <parameter>java.util.UUID</parameter>
      </parameters>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothSocket</class>
      <method>connect</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>getState</method>
      <returnType>int</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioManager</class>
      <method>stopBluetoothSco</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>setName</method>
      <returnType>boolean</returnType>
      <parameters>
        <parameter>java.lang.String</parameter>
      </parameters>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothDevice</class>
      <method>createRfcommSocketToServiceRecord</method>
      <returnType>BluetoothSocket</returnType>
      <parameters>
        <parameter>java.util.UUID</parameter>
      </parameters>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>isDiscovering</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>isEnabled</method>
      <returnType>boolean</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.bluetooth</package>
      <class>BluetoothAdapter</class>
      <method>getName</method>
      <returnType>String</returnType>
      <parameters/>
    </call>
  </permission>
  <permission name="android.permission.RECORD_AUDIO">
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>swipeRight</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>AudioRecord</class>
      <method>&lt;init&gt;</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
        <parameter>int</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech</package>
      <class>SpeechRecognizer</class>
      <method>startListening</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.content.Intent</parameter>
      </parameters>
    </call>
    <call>
      <package>android.inputmethodservice</package>
      <class>KeyboardView</class>
      <method>swipeDown</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.speech</package>
      <class>SpeechRecognizer</class>
      <method>setRecognitionListener</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>android.speech.RecognitionListener</parameter>
      </parameters>
    </call>
    <call>
      <package>android.speech</package>
      <class>SpeechRecognizer</class>
      <method>stopListening</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.speech</package>
      <class>SpeechRecognizer</class>
      <method>cancel</method>
      <returnType>void</returnType>
      <parameters/>
    </call>
    <call>
      <package>android.media</package>
      <class>MediaRecorder</class>
      <method>setAudioSource</method>
      <returnType>void</returnType>
      <parameters>
        <parameter>int</parameter>
      </parameters>
    </call>
  </permission>
</permissions>
